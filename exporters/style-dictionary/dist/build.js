(()=>{var e={"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js ***!
  \***********************************************************************************/(e,t)=>{(()=>{"use strict";var e={4379:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SupernovaError=void 0;class o extends Error{constructor(e,t,o,r,n,i,a){super(e),this.code=t,this.status=o,this.formErrors=r,this.requestId=n,this.serverTime=i,this.url=a}static fromNetworkResponse(e,t,r){var n,i,a;return new o(e.message,e.errorCode||e.reason||e.label||null,e.code||t,null!==(n=e.formErrors)&&void 0!==n?n:null,null!==(i=e.requestId)&&void 0!==i?i:null,null!==(a=e.serverTime)&&void 0!==a?a:null,r)}static fromNoNetworkResponse(e){return new o("No network or internet unreachable","NO_NETWORK",12163,null,(new Date).toISOString(),null,e)}static fromCode(e){return new o(e,e,null,null,null,null,null)}static fromMessage(e){return new o(e,null,null,null,null,null,null)}isFieldErrored(e){return void 0!==this.formErrors.find((t=>t.key===e))}errorForField(e){var t;return null!==(t=this.formErrors.find((t=>t.key===e)))&&void 0!==t?t:null}toString(){var e,t,o,r,n,i;return`\n    Error thrown: ${this.message}\n\n    Code: ${null!==(e=this.code)&&void 0!==e?e:"-"}\n\n    Status: ${null!==(t=this.status)&&void 0!==t?t:"-"}\n\n    Fields: ${JSON.stringify(this.formErrors,null,2)}\n\n    Request ID: ${null!==(o=this.requestId)&&void 0!==o?o:"-"}\n\n    Server time: ${null!==(r=this.serverTime)&&void 0!==r?r:"-"}\n\n    Network URL: ${null!==(n=this.url)&&void 0!==n?n:"-"}\n\n    Stack: ${null!==(i=this.stack)&&void 0!==i?i:"-"}\n    `}toHumanReadable(){return`${this.message}${this.requestId?` (request ${this.requestId})`:""}`}}t.SupernovaError=o},9932:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.docsImageRefToUrl=t.DocsImageRefType=void 0,function(e){e.resource="Resource",e.figmaNode="FigmaNode"}(o||(t.DocsImageRefType=o={})),t.docsImageRefToUrl=function(e,t,r){var n;if(e)switch(e.type){case o.resource:return null===(n=e.resource)||void 0===n?void 0:n.url;case o.figmaNode:if(!e.figmaNode||!e.figmaNode.sourceId||!e.figmaNode.frameReferenceId)return;return t.resources.getFigmaFrameHostedUrl({designSystemId:r.dsId,versionId:r.versionId},e.figmaNode.frameReferenceId);default:return}}},5673:(e,t)=>{var o;function r(e){switch(e.type){case o.documentationItem:return`@page:${e.documentationItemId}`;case o.pageHeading:return`@page:${e.documentationItemId}#${e.pageHeadingId}`;case o.url:return e.url;default:return}}Object.defineProperty(t,"__esModule",{value:!0}),t.linkAttributeToDocsLink=t.docsLinkToLinkAttributes=t.docsLinkToUrl=t.DocsLinkRefType=void 0,function(e){e.documentationItem="DocumentationItem",e.pageHeading="PageHeading",e.url="Url"}(o||(t.DocsLinkRefType=o={})),t.docsLinkToUrl=r,t.docsLinkToLinkAttributes=function(e){const t=r(e);if(t)return{href:t,target:e.openInNewTab?"_blank":"_self"}},t.linkAttributeToDocsLink=function(e,t){if(!e)return;const r="_blank"===t;if(e.startsWith("@page:")){if(e.includes("#")){const[t,n]=e.replace("@page:","").split("#");return{type:o.pageHeading,documentationItemId:t,pageHeadingId:n,openInNewTab:r}}return{type:o.documentationItem,documentationItemId:e.replace("@page:",""),openInNewTab:r}}return{type:o.url,url:e,openInNewTab:r}}},2657:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockShortcut=t.DocumentationLegacyPageBlockShortcutType=void 0,function(e){e.external="External",e.internal="Internal"}(o||(t.DocumentationLegacyPageBlockShortcutType=o={})),t.DocumentationLegacyPageBlockShortcut=class{constructor(e){var t;e.url?this.type=o.external:this.type=o.internal,this.title=this.shortcutTitleFromModel(e,this.type),this.description=this.shortcutDescriptionFromModel(e,this.type),this.previewUrl=this.shortcutPreviewUrlFromModel(e),this.type===o.internal&&(null===(t=e.documentationItemPreview)||void 0===t?void 0:t.valid)&&e.documentationItemId?this.internalId=e.documentationItemId:(this.internalId=null,this.type===o.external&&e.url?this.externalUrl=e.url:this.externalUrl=null)}shortcutTitleFromModel(e,t){var r,n,i,a,l;let s=null;return e.title&&e.title.trim().length>0?s=e.title:t===o.internal?s=null!==(n=null===(r=e.documentationItemPreview)||void 0===r?void 0:r.title)&&void 0!==n?n:null:t===o.external&&(s=null!==(l=null!==(a=null===(i=e.urlPreview)||void 0===i?void 0:i.title)&&void 0!==a?a:e.url)&&void 0!==l?l:null),s&&0!==s.trim().length?s:null}shortcutDescriptionFromModel(e,t){var r;let n=null;return e.description&&e.description.trim().length>0?n=e.description:t===o.external&&(n=null===(r=e.urlPreview)||void 0===r?void 0:r.description),n&&0!==n.trim().length?n:null}shortcutPreviewUrlFromModel(e){var t,o,r,n,i;return null!==(i=null!==(r=null!==(t=e.assetUrl)&&void 0!==t?t:null===(o=e.asset)||void 0===o?void 0:o.url)&&void 0!==r?r:null===(n=e.urlPreview)||void 0===n?void 0:n.thumbnailUrl)&&void 0!==i?i:null}}},7476:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextAlignment=t.Alignment=void 0,function(e){e.left="Left",e.center="Center",e.stretch="Stretch"}(o||(t.Alignment=o={})),function(e){e.left="Left",e.center="Center",e.right="Right"}(r||(t.TextAlignment=r={}))},8738:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetFormat=void 0,function(e){e.png="png",e.pdf="pdf",e.svg="svg"}(o||(t.AssetFormat=o={}))},915:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScale=void 0,function(e){e.x1="x1",e.x2="x2",e.x3="x3",e.x4="x4"}(o||(t.AssetScale=o={}))},899:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScaleType=void 0,function(e){e.aspectFill="AspectFill",e.aspectFit="AspectFit"}(o||(t.AssetScaleType=o={}))},6192:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.BlurType=void 0,function(e){e.layer="Layer",e.background="Background"}(o||(t.BlurType=o={}))},1160:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_POSITIONS=t.BorderPosition=void 0,function(e){e.inside="Inside",e.center="Center",e.outside="Outside"}(o||(t.BorderPosition=o={})),t.ALL_BORDER_POSITIONS=[o.inside,o.center,o.outside]},4546:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_STYLES=t.BorderStyle=void 0,function(e){e.dashed="Dashed",e.dotted="Dotted",e.solid="Solid",e.groove="Groove"}(o||(t.BorderStyle=o={})),t.ALL_BORDER_STYLES=[o.dashed,o.dotted,o.solid,o.groove]},8042:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ImportWarningType=void 0,function(e){e.UnsupportedFill="UnsupportedFill",e.UnsupportedStroke="UnsupportedStroke",e.UnsupportedEffect="UnsupportedEffect",e.StyleNotApplied="StyleNotApplied",e.NoPublishedStyles="NoPublishedStyles",e.NoPublishedComponents="NoPublishedComponents",e.NoPublishedAssets="NoPublishedAssets",e.NoVersionFound="NoVersionFound",e.ComponentHasNoThumbnail="ComponentHasNoThumbnail",e.DuplicateImportedStyleId="DuplicateImportedStyleId",e.DuplicateImportedStylePath="DuplicateImportedStylePath",e.NoPublishedElements="NoPublishedElements",e.NoUnpublishedStyles="NoUnpublishedStyles"}(o||(t.ImportWarningType=o={}))},5695:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainErrorCode=void 0,function(e){e.generalError="GeneralError",e.dnsNotConfigured="DNSNotConfigured",e.maintenance="Maintenance"}(o||(t.CustomDomainErrorCode=o={}))},7737:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainState=void 0,function(e){e.initial="Initial",e.domainSetupInProgress="DomainSetupInProgress",e.domainSetupFailed="DomainSetupFailed",e.domainSetupsSucces="DomainSetupSuccess",e.sslSetupInProgress="SSLSetupInProgress",e.sslSetupFailed="SSLSetupFailed",e.sslSetupSuccess="SSLSetupSuccess"}(o||(t.CustomDomainState=o={}))},5651:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorDataType=void 0,function(e){e.item="Item",e.token="Token",e.asset="Asset",e.component="Component",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockBehaviorDataType=o={}))},3733:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorSelectionType=void 0,function(e){e.entity="Entity",e.group="Group",e.entityAndGroup="EntityAndGroup"}(o||(t.DocsBlockBehaviorSelectionType=o={}))},8890:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockImagePropertyAspectRatio=void 0,function(e){e.auto="Auto",e.square="Square",e.landscape="Landscape",e.portrait="Portrait",e.wide="Wide"}(o||(t.DocsBlockImagePropertyAspectRatio=o={}))},9377:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemEntityType=void 0,function(e){e.token="Token",e.tokenGroup="TokenGroup",e.asset="Asset",e.assetGroup="AssetGroup",e.component="Component",e.componentGroup="ComponentGroup"}(o||(t.DocsBlockItemEntityType=o={}))},5883:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockItemPropertyOptionRenderingStyle=o={}))},8061:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyRichTextStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.ol="OL",e.ul="UL"}(o||(t.DocsBlockItemPropertyRichTextStyle=o={}))},7479:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyTextStyle=void 0,function(e){e.small="Small",e.regular="Regular",e.bold="Bold"}(o||(t.DocsBlockItemPropertyTextStyle=o={}))},6839:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyType=void 0,function(e){e.richText="RichText",e.multiRichText="MultiRichText",e.text="Text",e.richTextEditor="RichTextEditor",e.boolean="Boolean",e.number="Number",e.singleSelect="SingleSelect",e.multiSelect="MultiSelect",e.image="Image",e.token="Token",e.tokenType="TokenType",e.tokenProperty="TokenProperty",e.component="Component",e.componentProperty="ComponentProperty",e.asset="Asset",e.assetProperty="AssetProperty",e.embedURL="EmbedURL",e.url="URL",e.markdown="Markdown",e.code="Code",e.codeSandbox="CodeSandbox",e.table="Table",e.divider="Divider",e.storybook="Storybook",e.color="Color",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockItemPropertyType=o={}))},8095:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutType=void 0,function(e){e.column="Column",e.row="Row"}(o||(t.DocsBlockItemVariantLayoutType=o={}))},7291:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutWidth=void 0,function(e){e.c1="1",e.c2="2",e.c3="3",e.c4="4",e.c5="5",e.c6="6",e.c7="7",e.c8="8",e.c9="9",e.c10="10",e.c11="11",e.c12="12"}(o||(t.DocsBlockItemVariantLayoutWidth=o={}))},9133:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionColor=void 0,function(e){e.green="Green",e.red="Red",e.yellow="Yellow",e.blue="Blue",e.purple="Purple",e.orange="Orange",e.pink="Pink",e.teal="Teal",e.grey="Grey",e.lightGrey="LightGrey",e.cyan="Cyan",e.fuchsia="Fuchsia"}(o||(t.DocsBlockOptionColor=o={}))},5963:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockOptionRenderingStyle=o={}))},6644:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockRichTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.default="Default"}(o||(t.DocsBlockRichTextPropertyStyle=o={}))},306:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.default="Default",e.defaultBold="DefaultBold",e.defaultSemibold="DefaultSemibold",e.small="Small",e.smallBold="SmallBold",e.smallSemibold="SmallSemibold",e.custom="Custom"}(o||(t.DocsBlockTextPropertyStyle=o={}))},4068:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocsEntityGroupBehavior=o={}))},1233:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocsEntityType=o={}))},7971:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsSectionType=void 0,function(e){e.plain="Plain",e.tabs="Tabs"}(o||(t.DocsSectionType=o={}))},5102:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyCalloutType=void 0,function(e){e.info="Info",e.success="Success",e.warning="Warning",e.error="Error"}(o||(t.DocumentationLegacyCalloutType=o={}))},2123:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocumentationLegacyGroupBehavior=o={}))},9896:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyHeadingType=void 0,function(e){e[e.h1=1]="h1",e[e.h2=2]="h2",e[e.h3=3]="h3"}(o||(t.DocumentationLegacyHeadingType=o={}))},7379:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyItemType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocumentationLegacyItemType=o={}))},1423:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageAssetType=void 0,function(e){e.image="image",e.figmaFrame="figmaFrame"}(o||(t.DocumentationLegacyPageAssetType=o={}))},1601:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockThemeType=void 0,function(e){e.override="Override",e.comparison="Comparison"}(o||(t.DocumentationLegacyPageBlockThemeType=o={}))},1846:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockType=void 0,function(e){e.text="Text",e.heading="Heading",e.code="Code",e.unorderedList="UnorderedList",e.orderedList="OrderedList",e.quote="Quote",e.callout="Callout",e.divider="Divider",e.image="Image",e.token="Token",e.tokenList="TokenList",e.tokenGroup="TokenGroup",e.shortcuts="Shortcuts",e.link="Link",e.figmaEmbed="FigmaEmbed",e.youtubeEmbed="YoutubeEmbed",e.storybookEmbed="StorybookEmbed",e.genericEmbed="Embed",e.figmaFrames="FigmaFrames",e.custom="Custom",e.renderCode="RenderCode",e.componentAssets="ComponentAssets",e.column="Column",e.columnItem="ColumnItem",e.tabs="Tabs",e.tabItem="TabItem",e.table="Table",e.tableCell="TableCell",e.tableRow="TableRow"}(o||(t.DocumentationLegacyPageBlockType=o={}))},1255:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameAlignment=void 0,function(e){e.frameHeight="FrameHeight",e.center="Center"}(o||(t.FrameAlignment=o={}))},3718:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameLayout=void 0,function(e){e.c8="C8",e.c7="C7",e.c6="C6",e.c5="C5",e.c4="C4",e.c3="C3",e.c2="C2",e.c1="C1",e.c175="C1_75"}(o||(t.FrameLayout=o={}))},1:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.GradientType=void 0,function(e){e.linear="Linear",e.radial="Radial",e.angular="Angular"}(o||(t.GradientType=o={}))},934:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.IconSet=void 0,function(e){e.checkCircle="CheckCircle",e.crossCircle="CrossCircle",e.alert="Alert"}(o||(t.IconSet=o={}))},2674:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.RichTextSpanAttributeType=void 0,function(e){e.bold="Bold",e.italic="Italic",e.link="Link",e.strikethrough="Strikethrough",e.code="Code"}(o||(t.RichTextSpanAttributeType=o={}))},9125:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ShadowType=void 0,function(e){e.drop="Drop",e.inner="Inner"}(o||(t.ShadowType=o={}))},4652:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.SourceType=void 0,function(e){e.figma="Figma",e.tokenStudio="TokenStudio",e.figmaVariablesPlugin="FigmaVariablesPlugin"}(o||(t.SourceType=o={}))},922:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextCase=void 0,function(e){e.original="Original",e.upper="Upper",e.lower="Lower",e.camel="Camel",e.smallCaps="SmallCaps"}(o||(t.TextCase=o={}))},7040:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoration=void 0,function(e){e.original="None",e.underline="Underline",e.strikethrough="Strikethrough"}(o||(t.TextDecoration=o={}))},3788:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DT_TOKEN_TYPES=t.tokenTypeIsReferencable=t.REFERENCABLE_TOKEN_TYPES=t.REPLACABLE_TOKEN_TYPES=t.tokenTypeIsNonPure=t.tokenTypeIsPure=t.PURE_TOKEN_TYPES=t.ALL_TOKEN_TYPES=t.MS_DIMENSION_TOKEN_TYPES=t.RAW_DIMENSION_TOKEN_TYPES=t.DIMENSION_TOKEN_TYPES=t.OPTION_TOKEN_TYPES=t.STRING_TOKEN_TYPES=t.TokenType=void 0,function(e){e.color="Color",e.typography="Typography",e.shadow="Shadow",e.border="Border",e.gradient="Gradient",e.blur="Blur",e.radius="BorderRadius",e.borderWidth="BorderWidth",e.duration="Duration",e.fontSize="FontSize",e.dimension="Dimension",e.letterSpacing="LetterSpacing",e.lineHeight="LineHeight",e.opacity="Opacity",e.paragraphSpacing="ParagraphSpacing",e.size="Size",e.space="Space",e.zIndex="ZIndex",e.textDecoration="TextDecoration",e.textCase="TextCase",e.visibility="Visibility",e.fontFamily="FontFamily",e.fontWeight="FontWeight",e.string="String",e.productCopy="ProductCopy"}(o||(t.TokenType=o={})),t.STRING_TOKEN_TYPES=[o.string,o.productCopy,o.fontFamily,o.fontWeight],t.OPTION_TOKEN_TYPES=[o.textCase,o.textDecoration,o.visibility],t.DIMENSION_TOKEN_TYPES=[o.dimension,o.size,o.space,o.opacity,o.fontSize,o.lineHeight,o.letterSpacing,o.paragraphSpacing,o.borderWidth,o.radius,o.duration,o.zIndex],t.RAW_DIMENSION_TOKEN_TYPES=[o.opacity,o.zIndex],t.MS_DIMENSION_TOKEN_TYPES=[o.duration],t.ALL_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES,o.color,o.gradient,o.border,o.radius,o.shadow,o.typography,o.blur],t.PURE_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.tokenTypeIsPure=e=>t.PURE_TOKEN_TYPES.includes(e),t.tokenTypeIsNonPure=e=>!(0,t.tokenTypeIsPure)(e),t.REPLACABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.REFERENCABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.textCase,o.textDecoration],t.tokenTypeIsReferencable=e=>t.REFERENCABLE_TOKEN_TYPES.includes(e),t.DT_TOKEN_TYPES=[o.color,o.shadow,o.gradient,o.typography,o.border,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.string,...t.OPTION_TOKEN_TYPES]},8607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.MS_UNITS=t.PX_UNITS=t.RAW_UNITS=t.LINE_HEIGHT_UNITS=t.SIZE_UNITS=t.Unit=void 0,function(e){e.pixels="Pixels",e.percent="Percent",e.rem="Rem",e.ms="Ms",e.raw="Raw"}(o||(t.Unit=o={})),t.SIZE_UNITS=[o.pixels,o.percent,o.rem],t.LINE_HEIGHT_UNITS=[o.pixels,o.percent,o.rem,o.raw],t.RAW_UNITS=[o.raw],t.PX_UNITS=[o.pixels],t.MS_UNITS=[o.ms]},9478:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertRemoteToUserRole=t.UserRole=void 0;const r=o(4379);var n;!function(e){e.owner="Owner",e.admin="Admin",e.creator="Creator",e.contributor="Contributor",e.billing="Billing",e.viewer="Viewer"}(n||(t.UserRole=n={})),t.convertRemoteToUserRole=e=>{switch(e){case"Owner":return n.owner;case"Admin":return n.admin;case"Creator":return n.creator;case"Contributor":return n.contributor;case"Billing":return n.billing;case"Viewer":return n.viewer;default:throw r.SupernovaError.fromMessage(`Unknown role: ${e}`)}}},6141:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.VisibilityType=void 0,function(e){e.visible="Visible",e.hidden="Hidden"}(o||(t.VisibilityType=o={}))},6298:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryAuthType=void 0,function(e){e.basic="Basic",e.bearer="Bearer"}(o||(t.WorkspaceNPMRegistryAuthType=o={}))},7968:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryType=void 0,function(e){e.npmJS="NPMJS",e.gitHub="GitHub",e.azureDevOps="AzureDevOps",e.artifactory="Artifactory",e.custom="Custom"}(o||(t.WorkspaceNPMRegistryType=o={}))},5503:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionPlanInterval=void 0,function(e){e.yearly="yearly",e.monthly="monthly"}(o||(t.WorkspaceSubscriptionPlanInterval=o={}))},4290:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionProductCode=void 0,function(e){e.free="free",e.team="team",e.teamTest="team_test",e.company="company",e.enterprise="enterprise"}(o||(t.WorkspaceSubscriptionProductCode=o={}))},3607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatus=void 0,function(e){e.active="active",e.gracePeriod="gracePeriod",e.cancelled="cancelled",e.suspended="suspended"}(o||(t.WorkspaceSubscriptionStatus=o={}))},2802:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.PulsarExecutor=t.OutputFileType=void 0,function(e){e.copyRemoteUrl="copyRemoteUrl",e.text="text",e.binary="binary"}(o||(t.OutputFileType=o={})),function(e){e.supernova="supernova",e.local="local"}(r||(t.PulsarExecutor=r={}))}},o={};function r(t){var n=o[t];if(void 0!==n)return n.exports;var i=o[t]={exports:{}};return e[t](i,i.exports,r),i.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.TokenType=e.TextDecoration=e.TextCase=e.ShadowType=e.RichTextSpanAttributeType=e.GradientType=e.FrameLayout=e.FrameAlignment=e.IconSet=e.SourceType=e.DocsImageRefType=e.DocsLinkRefType=e.DocsSectionType=e.DocsEntityType=e.DocsEntityGroupBehavior=e.DocsBlockTextPropertyStyle=e.DocsBlockRichTextPropertyStyle=e.DocsBlockOptionColor=e.DocsBlockOptionRenderingStyle=e.DocsBlockItemVariantLayoutWidth=e.DocsBlockItemVariantLayoutType=e.DocsBlockItemPropertyType=e.DocsBlockItemPropertyTextStyle=e.DocsBlockItemPropertyRichTextStyle=e.DocsBlockItemPropertyOptionRenderingStyle=e.DocsBlockItemEntityType=e.DocsBlockImagePropertyAspectRatio=e.DocsBlockBehaviorSelectionType=e.DocsBlockBehaviorDataType=e.DocumentationLegacyPageBlockShortcutType=e.DocumentationLegacyPageBlockThemeType=e.DocumentationLegacyPageBlockType=e.DocumentationLegacyPageAssetType=e.DocumentationLegacyItemType=e.DocumentationLegacyHeadingType=e.DocumentationLegacyGroupBehavior=e.DocumentationLegacyCalloutType=e.BorderStyle=e.BorderPosition=e.BlurType=e.AssetScaleType=e.AssetScale=e.AssetFormat=e.Alignment=e.ALL_TOKEN_TYPES=e.ALL_BORDER_STYLES=e.ALL_BORDER_POSITIONS=e.OPTION_TOKEN_TYPES=e.STRING_TOKEN_TYPES=e.DIMENSION_TOKEN_TYPES=void 0,e.PulsarExecutor=e.OutputFileType=e.CustomDomainState=e.CustomDomainErrorCode=e.ImportWarningType=e.WorkspaceNPMRegistryType=e.WorkspaceNPMRegistryAuthType=e.WorkspaceSubscriptionStatus=e.WorkspaceSubscriptionProductCode=e.WorkspaceSubscriptionPlanInterval=e.VisibilityType=e.UserRole=e.Unit=void 0;var t=r(3788);Object.defineProperty(e,"DIMENSION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.DIMENSION_TOKEN_TYPES}}),Object.defineProperty(e,"STRING_TOKEN_TYPES",{enumerable:!0,get:function(){return t.STRING_TOKEN_TYPES}}),Object.defineProperty(e,"OPTION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.OPTION_TOKEN_TYPES}});var o=r(1160);Object.defineProperty(e,"ALL_BORDER_POSITIONS",{enumerable:!0,get:function(){return o.ALL_BORDER_POSITIONS}});var i=r(4546);Object.defineProperty(e,"ALL_BORDER_STYLES",{enumerable:!0,get:function(){return i.ALL_BORDER_STYLES}});var a=r(3788);Object.defineProperty(e,"ALL_TOKEN_TYPES",{enumerable:!0,get:function(){return a.ALL_TOKEN_TYPES}});var l=r(7476);Object.defineProperty(e,"Alignment",{enumerable:!0,get:function(){return l.Alignment}});var s=r(8738);Object.defineProperty(e,"AssetFormat",{enumerable:!0,get:function(){return s.AssetFormat}});var c=r(915);Object.defineProperty(e,"AssetScale",{enumerable:!0,get:function(){return c.AssetScale}});var u=r(899);Object.defineProperty(e,"AssetScaleType",{enumerable:!0,get:function(){return u.AssetScaleType}});var p=r(6192);Object.defineProperty(e,"BlurType",{enumerable:!0,get:function(){return p.BlurType}});var d=r(1160);Object.defineProperty(e,"BorderPosition",{enumerable:!0,get:function(){return d.BorderPosition}});var m=r(4546);Object.defineProperty(e,"BorderStyle",{enumerable:!0,get:function(){return m.BorderStyle}});var y=r(5102);Object.defineProperty(e,"DocumentationLegacyCalloutType",{enumerable:!0,get:function(){return y.DocumentationLegacyCalloutType}});var T=r(2123);Object.defineProperty(e,"DocumentationLegacyGroupBehavior",{enumerable:!0,get:function(){return T.DocumentationLegacyGroupBehavior}});var f=r(9896);Object.defineProperty(e,"DocumentationLegacyHeadingType",{enumerable:!0,get:function(){return f.DocumentationLegacyHeadingType}});var g=r(7379);Object.defineProperty(e,"DocumentationLegacyItemType",{enumerable:!0,get:function(){return g.DocumentationLegacyItemType}});var S=r(1423);Object.defineProperty(e,"DocumentationLegacyPageAssetType",{enumerable:!0,get:function(){return S.DocumentationLegacyPageAssetType}});var b=r(1846);Object.defineProperty(e,"DocumentationLegacyPageBlockType",{enumerable:!0,get:function(){return b.DocumentationLegacyPageBlockType}});var h=r(1601);Object.defineProperty(e,"DocumentationLegacyPageBlockThemeType",{enumerable:!0,get:function(){return h.DocumentationLegacyPageBlockThemeType}});var v=r(2657);Object.defineProperty(e,"DocumentationLegacyPageBlockShortcutType",{enumerable:!0,get:function(){return v.DocumentationLegacyPageBlockShortcutType}});var P=r(5651);Object.defineProperty(e,"DocsBlockBehaviorDataType",{enumerable:!0,get:function(){return P.DocsBlockBehaviorDataType}});var k=r(3733);Object.defineProperty(e,"DocsBlockBehaviorSelectionType",{enumerable:!0,get:function(){return k.DocsBlockBehaviorSelectionType}});var O=r(8890);Object.defineProperty(e,"DocsBlockImagePropertyAspectRatio",{enumerable:!0,get:function(){return O.DocsBlockImagePropertyAspectRatio}});var _=r(9377);Object.defineProperty(e,"DocsBlockItemEntityType",{enumerable:!0,get:function(){return _.DocsBlockItemEntityType}});var C=r(5883);Object.defineProperty(e,"DocsBlockItemPropertyOptionRenderingStyle",{enumerable:!0,get:function(){return C.DocsBlockItemPropertyOptionRenderingStyle}});var I=r(8061);Object.defineProperty(e,"DocsBlockItemPropertyRichTextStyle",{enumerable:!0,get:function(){return I.DocsBlockItemPropertyRichTextStyle}});var D=r(7479);Object.defineProperty(e,"DocsBlockItemPropertyTextStyle",{enumerable:!0,get:function(){return D.DocsBlockItemPropertyTextStyle}});var N=r(6839);Object.defineProperty(e,"DocsBlockItemPropertyType",{enumerable:!0,get:function(){return N.DocsBlockItemPropertyType}});var E=r(8095);Object.defineProperty(e,"DocsBlockItemVariantLayoutType",{enumerable:!0,get:function(){return E.DocsBlockItemVariantLayoutType}});var x=r(7291);Object.defineProperty(e,"DocsBlockItemVariantLayoutWidth",{enumerable:!0,get:function(){return x.DocsBlockItemVariantLayoutWidth}});var j=r(5963);Object.defineProperty(e,"DocsBlockOptionRenderingStyle",{enumerable:!0,get:function(){return j.DocsBlockOptionRenderingStyle}});var B=r(9133);Object.defineProperty(e,"DocsBlockOptionColor",{enumerable:!0,get:function(){return B.DocsBlockOptionColor}});var R=r(6644);Object.defineProperty(e,"DocsBlockRichTextPropertyStyle",{enumerable:!0,get:function(){return R.DocsBlockRichTextPropertyStyle}});var L=r(306);Object.defineProperty(e,"DocsBlockTextPropertyStyle",{enumerable:!0,get:function(){return L.DocsBlockTextPropertyStyle}});var M=r(4068);Object.defineProperty(e,"DocsEntityGroupBehavior",{enumerable:!0,get:function(){return M.DocsEntityGroupBehavior}});var F=r(1233);Object.defineProperty(e,"DocsEntityType",{enumerable:!0,get:function(){return F.DocsEntityType}});var A=r(7971);Object.defineProperty(e,"DocsSectionType",{enumerable:!0,get:function(){return A.DocsSectionType}});var w=r(5673);Object.defineProperty(e,"DocsLinkRefType",{enumerable:!0,get:function(){return w.DocsLinkRefType}});var H=r(9932);Object.defineProperty(e,"DocsImageRefType",{enumerable:!0,get:function(){return H.DocsImageRefType}});var U=r(4652);Object.defineProperty(e,"SourceType",{enumerable:!0,get:function(){return U.SourceType}});var W=r(934);Object.defineProperty(e,"IconSet",{enumerable:!0,get:function(){return W.IconSet}});var V=r(1255);Object.defineProperty(e,"FrameAlignment",{enumerable:!0,get:function(){return V.FrameAlignment}});var $=r(3718);Object.defineProperty(e,"FrameLayout",{enumerable:!0,get:function(){return $.FrameLayout}});var G=r(1);Object.defineProperty(e,"GradientType",{enumerable:!0,get:function(){return G.GradientType}});var Y=r(2674);Object.defineProperty(e,"RichTextSpanAttributeType",{enumerable:!0,get:function(){return Y.RichTextSpanAttributeType}});var K=r(9125);Object.defineProperty(e,"ShadowType",{enumerable:!0,get:function(){return K.ShadowType}});var z=r(922);Object.defineProperty(e,"TextCase",{enumerable:!0,get:function(){return z.TextCase}});var q=r(7040);Object.defineProperty(e,"TextDecoration",{enumerable:!0,get:function(){return q.TextDecoration}});var J=r(3788);Object.defineProperty(e,"TokenType",{enumerable:!0,get:function(){return J.TokenType}});var Z=r(8607);Object.defineProperty(e,"Unit",{enumerable:!0,get:function(){return Z.Unit}});var X=r(9478);Object.defineProperty(e,"UserRole",{enumerable:!0,get:function(){return X.UserRole}});var Q=r(6141);Object.defineProperty(e,"VisibilityType",{enumerable:!0,get:function(){return Q.VisibilityType}});var ee=r(5503);Object.defineProperty(e,"WorkspaceSubscriptionPlanInterval",{enumerable:!0,get:function(){return ee.WorkspaceSubscriptionPlanInterval}});var te=r(4290);Object.defineProperty(e,"WorkspaceSubscriptionProductCode",{enumerable:!0,get:function(){return te.WorkspaceSubscriptionProductCode}});var oe=r(3607);Object.defineProperty(e,"WorkspaceSubscriptionStatus",{enumerable:!0,get:function(){return oe.WorkspaceSubscriptionStatus}});var re=r(6298);Object.defineProperty(e,"WorkspaceNPMRegistryAuthType",{enumerable:!0,get:function(){return re.WorkspaceNPMRegistryAuthType}});var ne=r(7968);Object.defineProperty(e,"WorkspaceNPMRegistryType",{enumerable:!0,get:function(){return ne.WorkspaceNPMRegistryType}});var ie=r(8042);Object.defineProperty(e,"ImportWarningType",{enumerable:!0,get:function(){return ie.ImportWarningType}});var ae=r(5695);Object.defineProperty(e,"CustomDomainErrorCode",{enumerable:!0,get:function(){return ae.CustomDomainErrorCode}});var le=r(7737);Object.defineProperty(e,"CustomDomainState",{enumerable:!0,get:function(){return le.CustomDomainState}});var se=r(2802);Object.defineProperty(e,"OutputFileType",{enumerable:!0,get:function(){return se.OutputFileType}}),Object.defineProperty(e,"PulsarExecutor",{enumerable:!0,get:function(){return se.PulsarExecutor}})})();var i=t;for(var a in n)i[a]=n[a];n.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})()},"./config.ts":
/*!*******************!*\
  !*** ./config.ts ***!
  \*******************/(e,t)=>{"use strict";var o,r,n,i;Object.defineProperty(t,"__esModule",{value:!0}),t.TokenNameStructure=t.TokenSortOrder=t.FileStructure=t.ThemeExportStyle=void 0,function(e){e.ApplyDirectly="applyDirectly",e.SeparateFiles="separateFiles",e.MergedTheme="mergedTheme",e.NestedThemes="nestedThemes"}(o||(t.ThemeExportStyle=o={})),function(e){e.SeparateByType="separateByType",e.SingleFile="singleFile"}(r||(t.FileStructure=r={})),function(e){e.Default="default",e.Alphabetical="alphabetical"}(n||(t.TokenSortOrder=n={})),function(e){e.PathAndName="pathAndName",e.NameOnly="nameOnly",e.CollectionPathAndName="collectionPathAndName"}(i||(t.TokenNameStructure=i={}))},"./src/constants/defaults.ts":
/*!***********************************!*\
  !*** ./src/constants/defaults.ts ***!
  \***********************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_TOKEN_PREFIXES=t.DEFAULT_STYLE_FILE_NAMES=void 0,t.DEFAULT_STYLE_FILE_NAMES={Color:"color.json",Typography:"typography.json",Dimension:"dimension.json",Size:"size.json",Space:"space.json",Opacity:"opacity.json",FontSize:"font-size.json",LineHeight:"line-height.json",LetterSpacing:"letter-spacing.json",ParagraphSpacing:"paragraph-spacing.json",BorderWidth:"border-width.json",BorderRadius:"border-radius.json",Duration:"duration.json",ZIndex:"z-index.json",Shadow:"shadow.json",Border:"border.json",Gradient:"gradient.json",String:"string.json",ProductCopy:"product-copy.json",FontFamily:"font-family.json",FontWeight:"font-weight.json",TextCase:"text-case.json",TextDecoration:"text-decoration.json",Visibility:"visibility.json",Blur:"blur.json"},t.DEFAULT_TOKEN_PREFIXES={Color:"color",Typography:"typography",Dimension:"dimension",Size:"size",Space:"space",Opacity:"opacity",FontSize:"fontSize",LineHeight:"lineHeight",LetterSpacing:"letterSpacing",ParagraphSpacing:"paragraphSpacing",BorderWidth:"borderWidth",BorderRadius:"borderRadius",Duration:"duration",ZIndex:"zIndex",Shadow:"shadow",Border:"border",Gradient:"gradient",String:"string",ProductCopy:"productCopy",FontFamily:"fontFamily",FontWeight:"fontWeight",TextCase:"textCase",TextDecoration:"textDecoration",Visibility:"visibility",Blur:"blur"}},"./src/content/token.ts":
/*!******************************!*\
  !*** ./src/content/token.ts ***!
  \******************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTokenPrefix=s,t.tokenObjectKeyName=c,t.resetTokenNameTracking=function(){(0,l.resetNameTracking)()},t.convertedToken=function(e,t,o,i=[]){const l=c(e,o,!1,i),s=r.CSSHelper.tokenToCSS(e,t,{allowReferences:n.exportConfiguration.useReferences,decimals:n.exportConfiguration.colorPrecision,colorFormat:n.exportConfiguration.colorFormat,forceRemUnit:n.exportConfiguration.forceRemUnit,remBase:n.exportConfiguration.remBase,tokenToVariableRef:e=>c(e,o,!1,i)}),u=" ".repeat(n.exportConfiguration.indent),p=(0,a.formatTokenValue)(s);return n.exportConfiguration.showDescriptions&&e.description?`${u}// ${e.description.trim()}\n${u}${l}: ${p},`:`${u}${l}: ${p},`};const r=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),n=o(/*! .. */"./src/index.ts"),i=o(/*! ../constants/defaults */"./src/constants/defaults.ts"),a=o(/*! ../utils/value-formatter */"./src/utils/value-formatter.ts"),l=o(/*! ../utils/token-hierarchy */"./src/utils/token-hierarchy.ts");function s(e,t=!1){return n.exportConfiguration.useTokenTypePrefixes||t?n.exportConfiguration.customizeTokenPrefixes?n.exportConfiguration.tokenPrefixes[e].trim():i.DEFAULT_TOKEN_PREFIXES[e]:""}function c(e,t,o=!1,i=[]){let a=null;if("collectionPathAndName"===n.exportConfiguration.tokenNameStructure&&e.collectionId){const t=i.find((t=>t.persistentId===e.collectionId));a=t?.name??null}const l="nameOnly"!==n.exportConfiguration.tokenNameStructure?t.find((t=>t.id===e.parentGroupId)):null,c=s(e.tokenType);return r.NamingHelper.codeSafeVariableNameForToken(e,n.exportConfiguration.tokenNameStyle,l??null,c,a,n.exportConfiguration.globalNamePrefix)}},"./src/files/style-file.ts":
/*!*********************************!*\
  !*** ./src/files/style-file.ts ***!
  \*********************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.styleOutputFile=function(e,t,o,i="",l,s=[],p=null){if(!n.exportConfiguration.exportBaseValues&&!i&&n.exportConfiguration.exportThemesAs!==c.ThemeExportStyle.NestedThemes)return null;let d=t.filter((t=>t.tokenType===e));if(i&&l&&n.exportConfiguration.exportOnlyThemedTokens&&(d=r.ThemeHelper.filterThemedTokens(d,l),0===d.length))return null;const m=u(d,o,l,s,t);if(!m)return null;const y=JSON.stringify(m,null,n.exportConfiguration.indent);return r.FileHelper.createTextFile({relativePath:`./brands/${p||"default"}`,fileName:n.exportConfiguration.customizeStyleFileNames?r.FileNameHelper.ensureFileExtension(n.exportConfiguration.styleFileNames[e],".json"):a.DEFAULT_STYLE_FILE_NAMES[e],content:y})},t.combinedStyleOutputFile=function(e,t,o="",i,a=[]){if(!n.exportConfiguration.exportBaseValues&&!o&&n.exportConfiguration.exportThemesAs!==c.ThemeExportStyle.NestedThemes)return null;const l=[...e];if(o&&i&&n.exportConfiguration.exportOnlyThemedTokens&&0===(e=r.ThemeHelper.filterThemedTokens(e,i)).length)return null;const s=u(e,t,i,a,l);if(!s)return null;const p=JSON.stringify(s,null,n.exportConfiguration.indent),d=o?`tokens.${o}.json`:"tokens.json";return r.FileHelper.createTextFile({relativePath:"./",fileName:d,content:p})};const r=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),n=o(/*! .. */"./src/index.ts"),i=o(/*! ../content/token */"./src/content/token.ts"),a=o(/*! ../constants/defaults */"./src/constants/defaults.ts"),l=o(/*! ../utils/token-hierarchy */"./src/utils/token-hierarchy.ts"),s=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),c=o(/*! ../../config */"./config.ts");function u(e,t,o,a=[],u){if((0,i.resetTokenNameTracking)(),!n.exportConfiguration.generateEmptyFiles&&0===e.length)return null;const p=new Map((u||e).map((e=>[e.id,e])));let d=[...e];"alphabetical"===n.exportConfiguration.tokenSortOrder&&d.sort(((e,o)=>{const r=(0,i.tokenObjectKeyName)(e,t,!0,a),n=(0,i.tokenObjectKeyName)(o,t,!0,a);return r.localeCompare(n)}));const m={};return n.exportConfiguration.showGeneratedFileDisclaimer&&(m._comment=n.exportConfiguration.disclaimer),d.forEach((e=>{(0,i.tokenObjectKeyName)(e,t,!0,a);const u=r.CSSHelper.tokenToCSS(e,p,{allowReferences:n.exportConfiguration.useReferences,decimals:n.exportConfiguration.colorPrecision,colorFormat:n.exportConfiguration.colorFormat,forceRemUnit:n.exportConfiguration.forceRemUnit,remBase:n.exportConfiguration.remBase,tokenToVariableRef:e=>{const t=(0,i.getTokenPrefix)(e.tokenType),o=(e.tokenPath||[]).filter((e=>e&&e.trim().length>0)).map((e=>s.NamingHelper.codeSafeVariableName(e,n.exportConfiguration.tokenNameStyle))),r=(0,l.processTokenName)(e,o);let u=[];switch(t&&u.push(t),n.exportConfiguration.tokenNameStructure){case c.TokenNameStructure.NameOnly:u.push(r);break;case c.TokenNameStructure.CollectionPathAndName:if(e.collectionId){const t=a.find((t=>t.persistentId===e.collectionId));if(t){const e=s.NamingHelper.codeSafeVariableName(t.name,n.exportConfiguration.tokenNameStyle);u.push(e)}}u.push(...o,r);break;case c.TokenNameStructure.PathAndName:u.push(...o,r)}return n.exportConfiguration.globalNamePrefix&&u.unshift(s.NamingHelper.codeSafeVariableName(n.exportConfiguration.globalNamePrefix,n.exportConfiguration.tokenNameStyle)),`{${u.join(".")}}`}}),d=(0,l.createHierarchicalStructure)(e.tokenPath||[],e.name,function(e,t,o,a){const l=e.replace(/['"]/g,""),s=t.description&&n.exportConfiguration.showDescriptions?{description:t.description.trim()}:{},u=(0,i.getTokenPrefix)(t.tokenType,!0);if(n.exportConfiguration.exportThemesAs===c.ThemeExportStyle.NestedThemes){const e={};return!o&&n.exportConfiguration.exportBaseValues&&(e.base={value:l,type:u}),o&&(e[r.ThemeHelper.getThemeIdentifier(o,r.StringCase.kebabCase)]={value:l,type:u,collection:a?.find((e=>e.persistentId===t.collectionId))?.name}),{...e,...s}}return{value:l,type:u,collection:a?.find((e=>e.persistentId===t.collectionId))?.name,...s}}(u,e,o,a),e,a);Object.assign(m,(0,l.deepMerge)(m,d))})),m}},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.exportConfiguration=void 0;const r=o(/*! @supernovaio/sdk-exporters */"./node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),n=o(/*! ../config */"./config.ts"),i=o(/*! ./files/style-file */"./src/files/style-file.ts"),a=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),l=o(/*! ./utils/token-hierarchy */"./src/utils/token-hierarchy.ts");function s(e){return e.filter((e=>null!==e))}t.exportConfiguration=Pulsar.exportConfig(),Pulsar.export((async(e,o)=>{const c={designSystemId:o.dsId,versionId:o.versionId};let u=await e.tokens.getTokens(c),p=await e.tokens.getTokenGroups(c),d=await e.tokens.getTokenCollections(c);if(o.brandId){const t=(await e.brands.getBrands(c)).find((e=>e.id===o.brandId||e.idInVersion===o.brandId));if(!t)throw new Error(`Unable to find brand ${o.brandId}.`);u=u.filter((e=>e.brandId===t.id)),p=p.filter((e=>e.brandId===t.id))}if(o.themeIds&&o.themeIds.length>0){const m=await e.tokens.getTokenThemes(c),y=o.themeIds.map((e=>{const t=m.find((t=>t.id===e||t.idInVersion===e));if(!t)throw new Error(`Unable to find theme ${e}`);return t}));switch(t.exportConfiguration.exportThemesAs){case n.ThemeExportStyle.NestedThemes:return s(Object.values(r.TokenType).map((r=>y.map((n=>{const a=e.tokens.computeTokensByApplyingThemes(u,u,[n]).map((e=>({...e,collectionId:u.find((t=>t.id===e.id))?.collectionId}))),l=t.exportConfiguration.exportBaseValues;t.exportConfiguration.exportBaseValues=!1;const s=(0,i.styleOutputFile)(r,a,p,"",n,d,o.brandId);return t.exportConfiguration.exportBaseValues=l,s})).reduce(((e,o)=>{if(!o)return e;if(!e)return o;const r=(0,l.deepMerge)(JSON.parse(e.content),JSON.parse(o.content));return{...o,content:JSON.stringify(r,null,t.exportConfiguration.indent)}}),null))));case n.ThemeExportStyle.SeparateFiles:if(t.exportConfiguration.fileStructure===n.FileStructure.SingleFile){const o=y.map((t=>{const o=e.tokens.computeTokensByApplyingThemes(u,u,[t]).map((e=>({...e,collectionId:u.find((t=>t.id===e.id))?.collectionId}))),r=a.ThemeHelper.getThemeIdentifier(t,a.StringCase.camelCase);return(0,i.combinedStyleOutputFile)(o,p,r,t,d)}));return s([t.exportConfiguration.exportBaseValues?(0,i.combinedStyleOutputFile)(u,p,"",void 0,d):null,...o])}const c=y.flatMap((t=>{const n=e.tokens.computeTokensByApplyingThemes(u,u,[t]),l=a.ThemeHelper.getThemeIdentifier(t,a.StringCase.camelCase);return Object.values(r.TokenType).map((e=>(0,i.styleOutputFile)(e,n,p,l,t,d,o.brandId)))}));return s([...t.exportConfiguration.exportBaseValues?Object.values(r.TokenType).map((e=>(0,i.styleOutputFile)(e,u,p,"",void 0,d,o.brandId))):[],...c]);case n.ThemeExportStyle.MergedTheme:if(t.exportConfiguration.fileStructure===n.FileStructure.SingleFile){const o=t.exportConfiguration.exportBaseValues?(0,i.combinedStyleOutputFile)(u,p,"",void 0,d):null,r=e.tokens.computeTokensByApplyingThemes(u,u,y);return s([o,(0,i.combinedStyleOutputFile)(r,p,"themed",y[0],d)])}const m=t.exportConfiguration.exportBaseValues?Object.values(r.TokenType).map((e=>(0,i.styleOutputFile)(e,u,p,"",void 0,d,o.brandId))):[],T=e.tokens.computeTokensByApplyingThemes(u,u,y);return s([...m,...Object.values(r.TokenType).map((e=>(0,i.styleOutputFile)(e,T,p,"themed",y[0],d,o.brandId)))]);case n.ThemeExportStyle.ApplyDirectly:u=e.tokens.computeTokensByApplyingThemes(u,u,y)}}if(t.exportConfiguration.fileStructure===n.FileStructure.SingleFile){return s([t.exportConfiguration.exportBaseValues?(0,i.combinedStyleOutputFile)(u,p,"",void 0,d):null])}return s(t.exportConfiguration.exportBaseValues?Object.values(r.TokenType).map((e=>(0,i.styleOutputFile)(e,u,p,"",void 0,d))):[])}))},"./src/utils/token-hierarchy.ts":
/*!**************************************!*\
  !*** ./src/utils/token-hierarchy.ts ***!
  \**************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resetNameTracking=function(){a.reset()},t.processTokenName=function(e,t=[],o=[]){let r=a.getSimpleTokenName(e,n.exportConfiguration.tokenNameStyle,!1,t);r.startsWith("_")&&(r=r.slice(1));return r},t.createHierarchicalStructure=function(e,t,o,l,s=[]){let c=null;if("collectionPathAndName"===n.exportConfiguration.tokenNameStructure&&l.collectionId){const e=s.find((e=>e.persistentId===l.collectionId));c=e?.name??null}const u=r.NamingHelper.codeSafeVariableName((0,i.getTokenPrefix)(l.tokenType),n.exportConfiguration.tokenNameStyle),p=[...n.exportConfiguration.globalNamePrefix?[r.NamingHelper.codeSafeVariableName(n.exportConfiguration.globalNamePrefix,n.exportConfiguration.tokenNameStyle)]:[],...u?[u]:[]];c&&p.push(r.NamingHelper.codeSafeVariableName(c,n.exportConfiguration.tokenNameStyle));const d=[...c?[c]:[],..."nameOnly"!==n.exportConfiguration.tokenNameStructure?(e||[]).filter((e=>e&&e.trim().length>0)).map((e=>r.NamingHelper.codeSafeVariableName(e,n.exportConfiguration.tokenNameStyle))):[]];"nameOnly"!==n.exportConfiguration.tokenNameStructure&&p.push(...(e||[]).filter((e=>e&&e.trim().length>0)).map((e=>r.NamingHelper.codeSafeVariableName(e,n.exportConfiguration.tokenNameStyle))));const m=a.getSimpleTokenName(l,n.exportConfiguration.tokenNameStyle,!1,d);return p.push(m.replace(/^_/,"")),p.reduceRight(((e,t)=>({[t]:e})),o)},t.deepMerge=function e(t,o){if(!t)return o;if(!o)return t;const r={...t},n=o.description||t.description;delete r.description,delete o.description,Object.keys(o).forEach((n=>{o[n]&&"object"==typeof o[n]&&!Array.isArray(o[n])?r[n]=n in t?e(t[n],o[n]):o[n]:r[n]=o[n]})),n&&(r.description=n);return r};const r=o(/*! @supernovaio/export-utils */"../../utils/dist/index.js"),n=o(/*! .. */"./src/index.ts"),i=o(/*! ../content/token */"./src/content/token.ts"),a=new r.TokenNameTracker},"./src/utils/value-formatter.ts":
/*!**************************************!*\
  !*** ./src/utils/value-formatter.ts ***!
  \**************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatTokenValue=function(e){e.startsWith("${")&&e.endsWith("}")&&(e=e.slice(2,-1));return`{ "value": "${e=e.replace(/['"]/g,"")}" }`}},"../../utils/dist/enums/ColorFormat.js":
/*!*********************************************!*\
  !*** ../../utils/dist/enums/ColorFormat.js ***!
  \*********************************************/(e,t)=>{"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ColorFormat=void 0,function(e){e.rgb="rgb",e.rgba="rgba",e.smartRgba="smartRgba",e.hex6="hex6",e.hex8="hex8",e.hashHex6="hashHex6",e.hashHex8="hashHex8",e.smartHashHex="smartHashHex",e.smartHex="smartHex",e.hsl="hsl",e.hsla="hsla",e.smartHsla="smartHsla",e.smartUIColor="smartUIColor",e.oklch="oklch",e.oklcha="oklcha",e.smartOklch="smartOklch"}(o||(t.ColorFormat=o={}))},"../../utils/dist/enums/StringCase.js":
/*!********************************************!*\
  !*** ../../utils/dist/enums/StringCase.js ***!
  \********************************************/(e,t)=>{"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.StringCase=void 0,function(e){e.camelCase="camelCase",e.capitalCase="capitalCase",e.constantCase="constantCase",e.dotCase="dotCase",e.trainCase="trainCase",e.noCase="noCase",e.kebabCase="kebabCase",e.pascalCase="pascalCase",e.pathCase="pathCase",e.sentenceCase="sentenceCase",e.snakeCase="snakeCase",e.flatCase="flatCase"}(o||(t.StringCase=o={}))},"../../utils/dist/helpers/CSSHelper.js":
/*!*********************************************!*\
  !*** ../../utils/dist/helpers/CSSHelper.js ***!
  \*********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CSSHelper=void 0;const r=o(/*! @supernovaio/sdk-exporters */"../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js"),n=o(/*! ./TokenHelper */"../../utils/dist/helpers/TokenHelper.js"),i=o(/*! ./ColorHelper */"../../utils/dist/helpers/ColorHelper.js");t.CSSHelper=class{static tokenToCSS(e,t,o){switch(e.tokenType){case r.TokenType.color:return this.colorTokenValueToCSS(e.value,t,o);case r.TokenType.border:return this.borderTokenValueToCSS(e.value,t,o);case r.TokenType.gradient:return this.gradientTokenValueToCSS(e.value,t,o);case r.TokenType.dimension:case r.TokenType.size:case r.TokenType.space:case r.TokenType.opacity:case r.TokenType.fontSize:case r.TokenType.lineHeight:case r.TokenType.letterSpacing:case r.TokenType.paragraphSpacing:case r.TokenType.borderWidth:case r.TokenType.radius:case r.TokenType.duration:case r.TokenType.zIndex:return this.dimensionTokenValueToCSS(e.value,t,o);case r.TokenType.shadow:return this.shadowTokenValueToCSS(e.value,t,o);case r.TokenType.fontWeight:return this.fontWeightTokenValueToCSS(e.value,t,o);case r.TokenType.fontFamily:case r.TokenType.productCopy:case r.TokenType.string:return this.stringTokenValueToCSS(e.value,t,o);case r.TokenType.textCase:case r.TokenType.textDecoration:case r.TokenType.visibility:return this.optionTokenValueToCSS(e.value,t,o,e.tokenType);case r.TokenType.blur:return this.blurTokenValueToCSS(e.value,t,o);case r.TokenType.typography:return this.typographyTokenValueToCSS(e.value,t,o);default:throw new r.UnreachableCaseError(e.tokenType,"Unsupported token type for transformation to CSS:")}}static colorTokenValueToCSS(e,t,o){return i.ColorHelper.formattedColorOrVariableName(e,t,o)}static borderTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(r)return o.tokenToVariableRef(r);const i=this.dimensionTokenValueToCSS(e.width,t,o),a=this.borderStyleToCSS(e.style),l=this.colorTokenValueToCSS(e.color,t,o);this.borderPositionToCSS(e.position);return`${i} ${a} ${l}`}static gradientTokenValueToCSS(e,t,o){return e.map((e=>this.gradientLayerToCSS(e,t,o))).join(", ")}static gradientLayerToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);const l=i.ColorHelper.roundToDecimals(e.to.x,o.decimals)-i.ColorHelper.roundToDecimals(e.from.x,o.decimals),s=i.ColorHelper.roundToDecimals(e.to.y,o.decimals)-i.ColorHelper.roundToDecimals(e.from.y,o.decimals),c=Math.atan2(s,l)*(180/Math.PI),u=()=>l>=0&&s>0||l>0&&s<=0||l<=0&&s<0?90+c:c-270;let p="";switch(e.type){case r.GradientType.linear:p=`linear-gradient(${u()}deg, `;break;case r.GradientType.radial:p="radial-gradient(circle, ";break;case r.GradientType.angular:p="conic-gradient(";break;default:p=`linear-gradient(${u()}deg, `}return`${p}${e.stops.map((e=>`${this.colorTokenValueToCSS(e.color,t,o)} ${i.ColorHelper.roundToDecimals(100*e.position,o.decimals)}%`)).join(", ")})`}static dimensionTokenValueToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);if(o.forceRemUnit&&e.unit===r.Unit.pixels){const t=o.remBase||16,r=e.measure/t;return`${i.ColorHelper.roundToDecimals(r,o.decimals)}rem`}return`${i.ColorHelper.roundToDecimals(e.measure,o.decimals)}${this.unitToCSS(e.unit)}`}static shadowTokenValueToCSS(e,t,o){return e.map((e=>this.shadowLayerToCSS(e,t,o))).join(", ")}static shadowLayerToCSS(e,t,o){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(a)return o.tokenToVariableRef(a);const l=e=>{if(o.forceRemUnit){const t=e/(o.remBase||16);return`${i.ColorHelper.roundToDecimals(t,o.decimals)}rem`}return`${e}px`};return`${e.type===r.ShadowType.inner?"inset ":""}${l(e.x)} ${l(e.y)} ${l(e.radius)} ${l(e.spread)} ${this.colorTokenValueToCSS({...e.color,...e.opacity&&{opacity:e.opacity}},t,o)}`}static fontWeightTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(r)return o.tokenToVariableRef(r);return`${this.normalizeTextWeight(e.text)}`}static normalizeTextWeight(e){const t=e.toLowerCase().trim(),o=parseInt(t);if(!isNaN(o))return o;switch(t){case"thin":case"hairline":return 100;case"extra light":case"extralight":case"ultra light":case"ultralight":return 200;case"light":return 300;case"normal":case"regular":case"book":default:return 400;case"medium":return 500;case"semi bold":case"semibold":case"demi bold":case"demibold":return 600;case"bold":return 700;case"extra bold":case"extrabold":case"ultra bold":case"ultrabold":return 800;case"black":case"heavy":return 900}}static stringTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`"${e.text}"`}static optionTokenValueToCSS(e,t,o,i){const a=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return a?o.tokenToVariableRef(a):i===r.TokenType.textCase?this.textCaseToCSS(e.value):i===r.TokenType.textDecoration?this.textDecorationToCSS(e.value):e.value.toLowerCase()}static blurTokenValueToCSS(e,t,o){const r=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);return r?o.tokenToVariableRef(r):`blur(${this.dimensionTokenValueToCSS(e.radius,t,o)})`}static typographyTokenValueToCSS(e,t,o){const i=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(i)return o.tokenToVariableRef(i);const a=(0,n.sureOptionalReference)(e.fontFamily.referencedTokenId,t,o.allowReferences),l=(0,n.sureOptionalReference)(e.fontWeight.referencedTokenId,t,o.allowReferences),s=(0,n.sureOptionalReference)(e.textDecoration.referencedTokenId,t,o.allowReferences),c=(0,n.sureOptionalReference)(e.textCase.referencedTokenId,t,o.allowReferences),u={fontFamily:a?o.tokenToVariableRef(a):e.fontFamily.text,fontWeight:l?o.tokenToVariableRef(l):this.normalizeTextWeight(e.fontWeight.text),textDecoration:s?o.tokenToVariableRef(s):e.textDecoration.value===r.TextDecoration.original?this.textDecorationToCSS(e.textDecoration.value):void 0,textCase:c?o.tokenToVariableRef(c):e.textCase.value===r.TextCase.original?this.textCaseToCSS(e.textCase.value):void 0,caps:e.textCase.value===r.TextCase.smallCaps,fontSize:this.dimensionTokenValueToCSS(e.fontSize,t,o),lineHeight:e.lineHeight?this.dimensionTokenValueToCSS(e.lineHeight,t,o):void 0},p=u.fontSize;return`${u.caps?"small-caps ":""}${u.fontWeight} ${u.lineHeight?`${p}/${u.lineHeight}`:p} ${a?u.fontFamily:`"${u.fontFamily}"`}`}static borderStyleToCSS(e){switch(e){case r.BorderStyle.dashed:return"dashed";case r.BorderStyle.dotted:return"dotted";case r.BorderStyle.solid:return"solid";case r.BorderStyle.groove:return"groove";default:return"solid"}}static borderPositionToCSS(e){switch(e){case r.BorderPosition.center:return"center";case r.BorderPosition.inside:return"inside";case r.BorderPosition.outside:default:return"outside"}}static unitToCSS(e){switch(e){case r.Unit.percent:return"%";case r.Unit.pixels:return"px";case r.Unit.rem:return"rem";case r.Unit.raw:return"";case r.Unit.ms:return"ms";default:return"px"}}static textCaseToCSS(e){switch(e){case r.TextCase.original:return"none";case r.TextCase.upper:return"uppercase";case r.TextCase.lower:return"lowercase";case r.TextCase.camel:return"capitalize";case r.TextCase.smallCaps:return"small-caps"}}static textDecorationToCSS(e){switch(e){case r.TextDecoration.original:return"none";case r.TextDecoration.underline:return"underline";case r.TextDecoration.strikethrough:return"line-through"}}}},"../../utils/dist/helpers/ColorHelper.js":
/*!***********************************************!*\
  !*** ../../utils/dist/helpers/ColorHelper.js ***!
  \***********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ColorHelper=void 0;const r=o(/*! ../enums/ColorFormat */"../../utils/dist/enums/ColorFormat.js"),n=o(/*! ./TokenHelper */"../../utils/dist/helpers/TokenHelper.js");class i{static formattedColorOrVariableName(e,t,o){let i,a=null,l=null;const s=(0,n.sureOptionalReference)(e.referencedTokenId,t,o.allowReferences);if(s)i=o.tokenToVariableRef(s);else{const r=(0,n.sureOptionalReference)(e.color.referencedTokenId,t,o.allowReferences);r&&(a=o.tokenToVariableRef(r));const i=(0,n.sureOptionalReference)(e.opacity.referencedTokenId,t,o.allowReferences);i&&(l=o.tokenToVariableRef(i))}if(i)return i;if(!i&&!a&&!l)return this.formattedColor(e,o.colorFormat,o.decimals);switch(o.colorFormat){case r.ColorFormat.rgb:case r.ColorFormat.rgba:case r.ColorFormat.smartRgba:return this.colorToRgb(o.colorFormat,this.normalizedIntColor(e),e.opacity.measure,o.decimals,a,l);default:return this.formattedColor(e,o.colorFormat,o.decimals)}}static formattedColor(e,t,o=3){switch(t){case r.ColorFormat.hex6:case r.ColorFormat.hex8:case r.ColorFormat.hashHex6:case r.ColorFormat.hashHex8:case r.ColorFormat.smartHex:case r.ColorFormat.smartHashHex:return this.colorToHex(t,this.normalizedIntColor(e),e.opacity.measure);case r.ColorFormat.rgb:case r.ColorFormat.rgba:case r.ColorFormat.smartRgba:return this.colorToRgb(t,this.normalizedIntColor(e),e.opacity.measure,o,null,null);case r.ColorFormat.hsl:case r.ColorFormat.hsla:case r.ColorFormat.smartHsla:return this.colorToHsl(t,this.normalizedFractionalColor(e),e.opacity.measure,o);case r.ColorFormat.smartUIColor:return this.colorToUIColor(this.normalizedIntColor(e),e.opacity.measure,o);case r.ColorFormat.oklch:case r.ColorFormat.oklcha:case r.ColorFormat.smartOklch:return this.colorToOklch(t,this.normalizedIntColor(e),e.opacity.measure,o);default:return this.colorToHex(r.ColorFormat.smartHashHex,this.normalizedIntColor(e),e.opacity.measure)}}static colorToRgb(e,t,o,n,i,a){let l;return l=e===r.ColorFormat.rgba||e===r.ColorFormat.smartRgba&&o<1?`rgba(${i||`${t.r}, ${t.g}, ${t.b}`}, ${a||this.roundToDecimals(o,n)})`:`rgb(${i||`${t.r}, ${t.g}, ${t.b}`})`,l}static colorToHex(e,t,o){let n=`${this.pHex(t.r)}${this.pHex(t.g)}${this.pHex(t.b)}`;return(e===r.ColorFormat.hex8||e===r.ColorFormat.hashHex8||e===r.ColorFormat.smartHex&&o<1||e===r.ColorFormat.smartHashHex&&o<1)&&(n+=`${this.pHex(Math.round(255*o))}`),e!==r.ColorFormat.hashHex6&&e!==r.ColorFormat.hashHex8&&e!==r.ColorFormat.smartHashHex||(n=`#${n}`),n}static colorToHsl(e,t,o,n){const i=Math.max(t.r,t.g,t.b),a=Math.min(t.r,t.g,t.b);let l,s=0,c=0,u=(i+a)/2;if(i===a)s=c=0;else{const e=i-a;switch(c=u>.5?e/(2-i-a):e/(i+a),i){case t.r:s=(t.g-t.b)/e+(t.g<t.b?6:0);break;case t.g:s=(t.b-t.r)/e+2;break;case t.b:s=(t.r-t.g)/e+4}s/=6}return l=e===r.ColorFormat.hsla||e===r.ColorFormat.smartHsla&&o<1?`hsla(${Math.round(360*s)}%, ${Math.round(100*c)}%, ${Math.round(100*u)}%, ${this.roundToDecimals(o,n)})`:`hsl(${Math.round(360*s)}%, ${Math.round(100*c)}%, ${Math.round(100*u)}%)`,l}static colorToUIColor(e,t,o=3){let r=`UIColor(rgb: 0x${this.pHex(e.r)}${this.pHex(e.g)}${this.pHex(e.b)})`;return t<1&&(r+=`.withAlphaComponent(${t})`),r}static normalizedIntColor(e){return{r:Math.round(e.color.r),g:Math.round(e.color.g),b:Math.round(e.color.b)}}static normalizedFractionalColor(e,t=3){return{r:this.roundToDecimals(e.color.r/255,t),g:i.roundToDecimals(e.color.g/255,t),b:i.roundToDecimals(e.color.b/255,t)}}static roundToDecimals(e,t,o=!1){const r=Math.pow(10,t),n=Math.round(e*r)/r;return o?Number(n.toFixed(t)):parseFloat(n.toFixed(t))}static pHex(e){return e.toString(16).padStart(2,"0")}static colorToOklch(e,t,o,n){const{l:i,c:a,h:l}=this.rgbToOklch(t.r,t.g,t.b);switch(e){case r.ColorFormat.oklcha:return`oklch(${i}% ${a} ${l} / ${this.roundToDecimals(100*o,n)}%)`;case r.ColorFormat.smartOklch:return o<1?`oklch(${i}% ${a} ${l} / ${this.roundToDecimals(100*o,n)}%)`:`oklch(${i}% ${a} ${l})`;case r.ColorFormat.oklch:default:return`oklch(${i}% ${a} ${l})`}}static rgbToOklch(e,t,o){const r=this.sRGBtoLinear(e/255),n=this.sRGBtoLinear(t/255),i=this.sRGBtoLinear(o/255),a=.4124564*r+.3575761*n+.1804375*i,l=.2126729*r+.7151522*n+.072175*i,s=.0193339*r+.119192*n+.9503041*i,c=.8189330101*a+.3618667424*l-.1288597137*s,u=.0329845436*a+.9293118715*l+.0361456387*s,p=.0482003018*a+.2643662691*l+.633851707*s,d=Math.cbrt(c),m=Math.cbrt(u),y=Math.cbrt(p),T=.2104542553*d+.793617785*m-.0040720468*y,f=1.9779984951*d-2.428592205*m+.4505937099*y,g=.0259040371*d+.7827717662*m-.808675766*y,S=Math.sqrt(f*f+g*g);let b=180*Math.atan2(g,f)/Math.PI;return b<0&&(b+=360),{l:this.roundToDecimals(100*T,2),c:this.roundToDecimals(S,3,!0),h:this.roundToDecimals(b,2)}}static sRGBtoLinear(e){return e<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}}t.ColorHelper=i},"../../utils/dist/helpers/FileHelper.js":
/*!**********************************************!*\
  !*** ../../utils/dist/helpers/FileHelper.js ***!
  \**********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileHelper=void 0;const r=o(/*! @supernovaio/sdk-exporters */"../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js");t.FileHelper=class{static createCopyRemoteFile({relativePath:e,fileName:t,url:o}){return{path:e,name:t,type:r.OutputFileType.copyRemoteUrl,url:o}}static createTextFile({relativePath:e,fileName:t,content:o}){return{path:e,name:t,type:r.OutputFileType.text,content:o}}static createBinaryFile({relativePath:e,fileName:t,data:o}){return{path:e,name:t,type:r.OutputFileType.binary,data:o}}}},"../../utils/dist/helpers/FileNameHelper.js":
/*!**************************************************!*\
  !*** ../../utils/dist/helpers/FileNameHelper.js ***!
  \**************************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileNameHelper=void 0;t.FileNameHelper=class{static ensureFileExtension(e,t){return e.toLowerCase().endsWith(t)?e:e+t}static replaceFileExtension(e,t,o){return e.replace(new RegExp(`${t}$`),o)}static getDefaultStyleFileName(e,t=".css"){return{Color:"color",Typography:"typography",Dimension:"dimension",Size:"size",Space:"space",Opacity:"opacity",FontSize:"font-size",LineHeight:"line-height",LetterSpacing:"letter-spacing",ParagraphSpacing:"paragraph-spacing",BorderWidth:"border-width",BorderRadius:"border-radius",Duration:"duration",ZIndex:"z-index",Shadow:"shadow",Border:"border",Gradient:"gradient",String:"string",ProductCopy:"product-copy",FontFamily:"font-family",FontWeight:"font-weight",TextCase:"text-case",TextDecoration:"text-decoration",Visibility:"visibility",Blur:"blur"}[e]+t}}},"../../utils/dist/helpers/GeneralHelper.js":
/*!*************************************************!*\
  !*** ../../utils/dist/helpers/GeneralHelper.js ***!
  \*************************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GeneralHelper=void 0;t.GeneralHelper=class{static indent(e=2){return" ".repeat(Math.max(0,e))}static addDisclaimer(e,t){if(!e)return t;return`/**\n * ${e.replace(/\n/g,"\n * ")} \n */\n\n${t}`}}},"../../utils/dist/helpers/NamingHelper.js":
/*!************************************************!*\
  !*** ../../utils/dist/helpers/NamingHelper.js ***!
  \************************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NamingHelper=void 0;const r=o(/*! ../enums/StringCase */"../../utils/dist/enums/StringCase.js"),n=o(/*! change-case */"../../utils/node_modules/change-case/dist/index.js");class i{static codeSafeVariableNameForToken(e,t,o,r,n,a){let l=[];return a&&a.length>0&&l.push(a.trim()),r&&r.length>0&&l.push(r),n&&n.length>0&&l.push(n),o&&(l.push(...o.path),o.isRoot||l.push(o.name)),l.push(e.name),i.codeSafeVariableName(l,t)}static codeSafeVariableName(e,t){let o="string"==typeof e?e:e.join(" ");switch(o=o.replaceAll(/[^a-zA-Z0-9_-]/g,"_"),t){case r.StringCase.camelCase:o=(0,n.camelCase)(o);break;case r.StringCase.capitalCase:o=(0,n.capitalCase)(o);break;case r.StringCase.constantCase:o=(0,n.constantCase)(o);break;case r.StringCase.dotCase:o=(0,n.dotCase)(o);break;case r.StringCase.trainCase:o=(0,n.trainCase)(o);break;case r.StringCase.noCase:o=(0,n.noCase)(o);break;case r.StringCase.kebabCase:o=(0,n.kebabCase)(o);break;case r.StringCase.pascalCase:o=(0,n.pascalCase)(o);break;case r.StringCase.pathCase:o=(0,n.pathCase)(o);break;case r.StringCase.sentenceCase:o=(0,n.sentenceCase)(o);break;case r.StringCase.snakeCase:o=(0,n.snakeCase)(o);break;case r.StringCase.flatCase:o=(0,n.camelCase)(o).toLowerCase()}return t!==r.StringCase.snakeCase&&t!==r.StringCase.constantCase&&(o=o.replaceAll("_","")),o.match(/^[^a-zA-Z]/)&&(o="_"+o),o}static nameAsCSSVarReference(e){return`var(--${e})`}static nameAsCSSVarDeclaration(e){return`--${e}`}}t.NamingHelper=i},"../../utils/dist/helpers/ThemeHelper.js":
/*!***********************************************!*\
  !*** ../../utils/dist/helpers/ThemeHelper.js ***!
  \***********************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ThemeHelper=void 0;const r=o(/*! ./NamingHelper */"../../utils/dist/helpers/NamingHelper.js"),n=o(/*! ../enums/StringCase */"../../utils/dist/enums/StringCase.js");t.ThemeHelper=class{static hasThemedTokens(e,t,o){const r=e.filter((e=>e.tokenType===t)),n=new Set(o.overriddenTokens.map((e=>e.id)));return r.some((e=>n.has(e.id)))}static filterThemedTokens(e,t){const o=new Set(t.overriddenTokens.map((e=>e.id)));return e.filter((e=>o.has(e.id)))}static getThemeIdentifier(e,t=n.StringCase.kebabCase){if("string"==typeof e)return e;const o=e.codeName||e.name;return r.NamingHelper.codeSafeVariableName(o,t)}static getThemeName(e){if("string"==typeof e)return e;const t=e.codeName||e.name;return r.NamingHelper.codeSafeVariableName(t,n.StringCase.capitalCase)}}},"../../utils/dist/helpers/TokenHelper.js":
/*!***********************************************!*\
  !*** ../../utils/dist/helpers/TokenHelper.js ***!
  \***********************************************/(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sureOptionalReference=function(e,t,o=!0){if(!e||!o)return null;const r=t.get(e);if(!r)throw new Error(`Trying to retrieve unknown referenced token ${e}`);return r}},"../../utils/dist/helpers/TokenNameTracker.js":
/*!****************************************************!*\
  !*** ../../utils/dist/helpers/TokenNameTracker.js ***!
  \****************************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TokenNameTracker=void 0;const r=o(/*! ./NamingHelper */"../../utils/dist/helpers/NamingHelper.js");t.TokenNameTracker=class{constructor(){this.tokenNameMap=new Map,this.nameToTokenMap=new Map,this.hierarchyNameMap=new Map}reset(){this.tokenNameMap.clear(),this.nameToTokenMap.clear(),this.hierarchyNameMap.clear()}getSimpleTokenName(e,t,o=!1,n=[]){const i=`${n.join("/")}/${e.name}`;if(!o&&this.tokenNameMap.has(e.id))return this.tokenNameMap.get(e.id);let a=r.NamingHelper.codeSafeVariableName(e.name,t);this.hierarchyNameMap.has(i)||this.hierarchyNameMap.set(i,new Set);const l=this.hierarchyNameMap.get(i);return l.size>0&&!l.has(e.id)&&(a=`${a}_${l.size}`),l.add(e.id),o||(this.tokenNameMap.set(e.id,a),this.nameToTokenMap.set(a,e.id)),a}getTokenName(e,t,o,n,i=!1){if(!i&&this.tokenNameMap.has(e.id))return this.tokenNameMap.get(e.id);const a=t.find((t=>t.id===e.parentGroupId));let l=r.NamingHelper.codeSafeVariableNameForToken(e,o,a,n),s=1;for(;this.nameToTokenMap.has(l)&&this.nameToTokenMap.get(l)!==e.id;)l=`${l}_copy_${s++}`;return i||(this.tokenNameMap.set(e.id,l),this.nameToTokenMap.set(l,e.id)),l}}},"../../utils/dist/helpers/WriteTokenPropStore.js":
/*!*******************************************************!*\
  !*** ../../utils/dist/helpers/WriteTokenPropStore.js ***!
  \*******************************************************/(e,t,o)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WriteTokenPropStore=void 0;const r=o(/*! ./NamingHelper */"../../utils/dist/helpers/NamingHelper.js"),n=o(/*! ../enums/StringCase */"../../utils/dist/enums/StringCase.js");t.WriteTokenPropStore=class{constructor(e,t){this.tokenPropertyWriteMap=new Map,this.sdk=e,this.target=t}storeValueForTokenProperty(e,t,o){let r=this.tokenPropertyWriteMap.get(t);r||(r=new Map,this.tokenPropertyWriteMap.set(t,r)),r.set(e,o)}async batchUpdateStoredTokenProperties(){if(0===this.tokenPropertyWriteMap.size)return;let e=await this.sdk.tokens.getTokenProperties(this.target);for(const[t,o]of this.tokenPropertyWriteMap){let i=e.find((e=>e.name===t));if(i||(await this.sdk.tokens.createTokenProperty(this.target,{type:"Generic",name:t,codeName:r.NamingHelper.codeSafeVariableName([t],n.StringCase.camelCase),columnWidth:200,description:"Variable name to use in code"}),e=await this.sdk.tokens.getTokenProperties(this.target),i=e.find((e=>e.name===t))),!i)throw new Error(`Failed to retrieve or create property ${t}.`);const a=Array.from(o).map((([e,t])=>({definitionId:i.id,targetElementId:e.id,value:t})));await this.sdk.bulkOperations.updateElementProperties(this.target,a)}}async writeTokenProperties(e,t,o){const r=e?.trim();if(r){for(const e of t){const t=o(e);this.storeValueForTokenProperty(e,r,t)}await this.batchUpdateStoredTokenProperties()}}}},"../../utils/dist/index.js":
/*!*********************************!*\
  !*** ../../utils/dist/index.js ***!
  \*********************************/function(e,t,o){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,r,n)}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||r(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),n(o(/*! ./helpers/NamingHelper */"../../utils/dist/helpers/NamingHelper.js"),t),n(o(/*! ./helpers/ColorHelper */"../../utils/dist/helpers/ColorHelper.js"),t),n(o(/*! ./helpers/TokenHelper */"../../utils/dist/helpers/TokenHelper.js"),t),n(o(/*! ./helpers/CSSHelper */"../../utils/dist/helpers/CSSHelper.js"),t),n(o(/*! ./helpers/FileHelper */"../../utils/dist/helpers/FileHelper.js"),t),n(o(/*! ./helpers/ThemeHelper */"../../utils/dist/helpers/ThemeHelper.js"),t),n(o(/*! ./helpers/FileNameHelper */"../../utils/dist/helpers/FileNameHelper.js"),t),n(o(/*! ./helpers/GeneralHelper */"../../utils/dist/helpers/GeneralHelper.js"),t),n(o(/*! ./enums/StringCase */"../../utils/dist/enums/StringCase.js"),t),n(o(/*! ./enums/ColorFormat */"../../utils/dist/enums/ColorFormat.js"),t),n(o(/*! ./helpers/TokenNameTracker */"../../utils/dist/helpers/TokenNameTracker.js"),t),n(o(/*! ./helpers/WriteTokenPropStore */"../../utils/dist/helpers/WriteTokenPropStore.js"),t)},"../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js":
/*!*********************************************************************************************!*\
  !*** ../../utils/node_modules/@supernovaio/sdk-exporters/build/supernova-sdk-typescript.js ***!
  \*********************************************************************************************/(e,t)=>{(()=>{"use strict";var e={4379:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SupernovaError=void 0;class o extends Error{constructor(e,t,o,r,n,i,a){super(e),this.code=t,this.status=o,this.formErrors=r,this.requestId=n,this.serverTime=i,this.url=a}static fromNetworkResponse(e,t,r){var n,i,a;return new o(e.message,e.errorCode||e.reason||e.label||null,e.code||t,null!==(n=e.formErrors)&&void 0!==n?n:null,null!==(i=e.requestId)&&void 0!==i?i:null,null!==(a=e.serverTime)&&void 0!==a?a:null,r)}static fromNoNetworkResponse(e){return new o("No network or internet unreachable","NO_NETWORK",12163,null,(new Date).toISOString(),null,e)}static fromCode(e){return new o(e,e,null,null,null,null,null)}static fromMessage(e){return new o(e,null,null,null,null,null,null)}isFieldErrored(e){return void 0!==this.formErrors.find((t=>t.key===e))}errorForField(e){var t;return null!==(t=this.formErrors.find((t=>t.key===e)))&&void 0!==t?t:null}toString(){var e,t,o,r,n,i;return`\n    Error thrown: ${this.message}\n\n    Code: ${null!==(e=this.code)&&void 0!==e?e:"-"}\n\n    Status: ${null!==(t=this.status)&&void 0!==t?t:"-"}\n\n    Fields: ${JSON.stringify(this.formErrors,null,2)}\n\n    Request ID: ${null!==(o=this.requestId)&&void 0!==o?o:"-"}\n\n    Server time: ${null!==(r=this.serverTime)&&void 0!==r?r:"-"}\n\n    Network URL: ${null!==(n=this.url)&&void 0!==n?n:"-"}\n\n    Stack: ${null!==(i=this.stack)&&void 0!==i?i:"-"}\n    `}toHumanReadable(){return`${this.message}${this.requestId?` (request ${this.requestId})`:""}`}}t.SupernovaError=o},9932:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.docsImageRefToUrl=t.DocsImageRefType=void 0,function(e){e.resource="Resource",e.figmaNode="FigmaNode"}(o||(t.DocsImageRefType=o={})),t.docsImageRefToUrl=function(e,t,r){var n;if(e)switch(e.type){case o.resource:return null===(n=e.resource)||void 0===n?void 0:n.url;case o.figmaNode:if(!e.figmaNode||!e.figmaNode.sourceId||!e.figmaNode.frameReferenceId)return;return t.resources.getFigmaFrameHostedUrl({designSystemId:r.dsId,versionId:r.versionId},e.figmaNode.frameReferenceId);default:return}}},5673:(e,t)=>{var o;function r(e){switch(e.type){case o.documentationItem:return`@page:${e.documentationItemId}`;case o.pageHeading:return`@page:${e.documentationItemId}#${e.pageHeadingId}`;case o.url:return e.url;default:return}}Object.defineProperty(t,"__esModule",{value:!0}),t.linkAttributeToDocsLink=t.docsLinkToLinkAttributes=t.docsLinkToUrl=t.DocsLinkRefType=void 0,function(e){e.documentationItem="DocumentationItem",e.pageHeading="PageHeading",e.url="Url"}(o||(t.DocsLinkRefType=o={})),t.docsLinkToUrl=r,t.docsLinkToLinkAttributes=function(e){const t=r(e);if(t)return{href:t,target:e.openInNewTab?"_blank":"_self"}},t.linkAttributeToDocsLink=function(e,t){if(!e)return;const r="_blank"===t;if(e.startsWith("@page:")){if(e.includes("#")){const[t,n]=e.replace("@page:","").split("#");return{type:o.pageHeading,documentationItemId:t,pageHeadingId:n,openInNewTab:r}}return{type:o.documentationItem,documentationItemId:e.replace("@page:",""),openInNewTab:r}}return{type:o.url,url:e,openInNewTab:r}}},2657:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockShortcut=t.DocumentationLegacyPageBlockShortcutType=void 0,function(e){e.external="External",e.internal="Internal"}(o||(t.DocumentationLegacyPageBlockShortcutType=o={})),t.DocumentationLegacyPageBlockShortcut=class{constructor(e){var t;e.url?this.type=o.external:this.type=o.internal,this.title=this.shortcutTitleFromModel(e,this.type),this.description=this.shortcutDescriptionFromModel(e,this.type),this.previewUrl=this.shortcutPreviewUrlFromModel(e),this.type===o.internal&&(null===(t=e.documentationItemPreview)||void 0===t?void 0:t.valid)&&e.documentationItemId?this.internalId=e.documentationItemId:(this.internalId=null,this.type===o.external&&e.url?this.externalUrl=e.url:this.externalUrl=null)}shortcutTitleFromModel(e,t){var r,n,i,a,l;let s=null;return e.title&&e.title.trim().length>0?s=e.title:t===o.internal?s=null!==(n=null===(r=e.documentationItemPreview)||void 0===r?void 0:r.title)&&void 0!==n?n:null:t===o.external&&(s=null!==(l=null!==(a=null===(i=e.urlPreview)||void 0===i?void 0:i.title)&&void 0!==a?a:e.url)&&void 0!==l?l:null),s&&0!==s.trim().length?s:null}shortcutDescriptionFromModel(e,t){var r;let n=null;return e.description&&e.description.trim().length>0?n=e.description:t===o.external&&(n=null===(r=e.urlPreview)||void 0===r?void 0:r.description),n&&0!==n.trim().length?n:null}shortcutPreviewUrlFromModel(e){var t,o,r,n,i;return null!==(i=null!==(r=null!==(t=e.assetUrl)&&void 0!==t?t:null===(o=e.asset)||void 0===o?void 0:o.url)&&void 0!==r?r:null===(n=e.urlPreview)||void 0===n?void 0:n.thumbnailUrl)&&void 0!==i?i:null}}},7476:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.TextAlignment=t.Alignment=void 0,function(e){e.left="Left",e.center="Center",e.stretch="Stretch"}(o||(t.Alignment=o={})),function(e){e.left="Left",e.center="Center",e.right="Right"}(r||(t.TextAlignment=r={}))},8738:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetFormat=void 0,function(e){e.png="png",e.pdf="pdf",e.svg="svg"}(o||(t.AssetFormat=o={}))},915:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScale=void 0,function(e){e.x1="x1",e.x2="x2",e.x3="x3",e.x4="x4"}(o||(t.AssetScale=o={}))},899:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.AssetScaleType=void 0,function(e){e.aspectFill="AspectFill",e.aspectFit="AspectFit"}(o||(t.AssetScaleType=o={}))},6192:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.BlurType=void 0,function(e){e.layer="Layer",e.background="Background"}(o||(t.BlurType=o={}))},1160:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_POSITIONS=t.BorderPosition=void 0,function(e){e.inside="Inside",e.center="Center",e.outside="Outside"}(o||(t.BorderPosition=o={})),t.ALL_BORDER_POSITIONS=[o.inside,o.center,o.outside]},4546:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ALL_BORDER_STYLES=t.BorderStyle=void 0,function(e){e.dashed="Dashed",e.dotted="Dotted",e.solid="Solid",e.groove="Groove"}(o||(t.BorderStyle=o={})),t.ALL_BORDER_STYLES=[o.dashed,o.dotted,o.solid,o.groove]},8042:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ImportWarningType=void 0,function(e){e.UnsupportedFill="UnsupportedFill",e.UnsupportedStroke="UnsupportedStroke",e.UnsupportedEffect="UnsupportedEffect",e.StyleNotApplied="StyleNotApplied",e.NoPublishedStyles="NoPublishedStyles",e.NoPublishedComponents="NoPublishedComponents",e.NoPublishedAssets="NoPublishedAssets",e.NoVersionFound="NoVersionFound",e.ComponentHasNoThumbnail="ComponentHasNoThumbnail",e.DuplicateImportedStyleId="DuplicateImportedStyleId",e.DuplicateImportedStylePath="DuplicateImportedStylePath",e.NoPublishedElements="NoPublishedElements",e.NoUnpublishedStyles="NoUnpublishedStyles"}(o||(t.ImportWarningType=o={}))},5695:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainErrorCode=void 0,function(e){e.generalError="GeneralError",e.dnsNotConfigured="DNSNotConfigured",e.maintenance="Maintenance"}(o||(t.CustomDomainErrorCode=o={}))},7737:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.CustomDomainState=void 0,function(e){e.initial="Initial",e.domainSetupInProgress="DomainSetupInProgress",e.domainSetupFailed="DomainSetupFailed",e.domainSetupsSucces="DomainSetupSuccess",e.sslSetupInProgress="SSLSetupInProgress",e.sslSetupFailed="SSLSetupFailed",e.sslSetupSuccess="SSLSetupSuccess"}(o||(t.CustomDomainState=o={}))},5651:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorDataType=void 0,function(e){e.item="Item",e.token="Token",e.asset="Asset",e.component="Component",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockBehaviorDataType=o={}))},3733:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockBehaviorSelectionType=void 0,function(e){e.entity="Entity",e.group="Group",e.entityAndGroup="EntityAndGroup"}(o||(t.DocsBlockBehaviorSelectionType=o={}))},8890:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockImagePropertyAspectRatio=void 0,function(e){e.auto="Auto",e.square="Square",e.landscape="Landscape",e.portrait="Portrait",e.wide="Wide"}(o||(t.DocsBlockImagePropertyAspectRatio=o={}))},9377:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemEntityType=void 0,function(e){e.token="Token",e.tokenGroup="TokenGroup",e.asset="Asset",e.assetGroup="AssetGroup",e.component="Component",e.componentGroup="ComponentGroup"}(o||(t.DocsBlockItemEntityType=o={}))},5883:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockItemPropertyOptionRenderingStyle=o={}))},8061:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyRichTextStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.ol="OL",e.ul="UL"}(o||(t.DocsBlockItemPropertyRichTextStyle=o={}))},7479:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyTextStyle=void 0,function(e){e.small="Small",e.regular="Regular",e.bold="Bold"}(o||(t.DocsBlockItemPropertyTextStyle=o={}))},6839:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemPropertyType=void 0,function(e){e.richText="RichText",e.multiRichText="MultiRichText",e.text="Text",e.richTextEditor="RichTextEditor",e.boolean="Boolean",e.number="Number",e.singleSelect="SingleSelect",e.multiSelect="MultiSelect",e.image="Image",e.token="Token",e.tokenType="TokenType",e.tokenProperty="TokenProperty",e.component="Component",e.componentProperty="ComponentProperty",e.asset="Asset",e.assetProperty="AssetProperty",e.embedURL="EmbedURL",e.url="URL",e.markdown="Markdown",e.code="Code",e.codeSandbox="CodeSandbox",e.table="Table",e.divider="Divider",e.storybook="Storybook",e.color="Color",e.figmaNode="FigmaNode",e.figmaComponent="FigmaComponent"}(o||(t.DocsBlockItemPropertyType=o={}))},8095:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutType=void 0,function(e){e.column="Column",e.row="Row"}(o||(t.DocsBlockItemVariantLayoutType=o={}))},7291:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockItemVariantLayoutWidth=void 0,function(e){e.c1="1",e.c2="2",e.c3="3",e.c4="4",e.c5="5",e.c6="6",e.c7="7",e.c8="8",e.c9="9",e.c10="10",e.c11="11",e.c12="12"}(o||(t.DocsBlockItemVariantLayoutWidth=o={}))},9133:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionColor=void 0,function(e){e.green="Green",e.red="Red",e.yellow="Yellow",e.blue="Blue",e.purple="Purple",e.orange="Orange",e.pink="Pink",e.teal="Teal",e.grey="Grey",e.lightGrey="LightGrey",e.cyan="Cyan",e.fuchsia="Fuchsia"}(o||(t.DocsBlockOptionColor=o={}))},5963:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockOptionRenderingStyle=void 0,function(e){e.segmentedControl="SegmentedControl",e.toggleButton="ToggleButton",e.select="Select",e.checkbox="Checkbox"}(o||(t.DocsBlockOptionRenderingStyle=o={}))},6644:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockRichTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.quote="Quote",e.callout="Callout",e.default="Default"}(o||(t.DocsBlockRichTextPropertyStyle=o={}))},306:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsBlockTextPropertyStyle=void 0,function(e){e.title1="Title1",e.title2="Title2",e.title3="Title3",e.title4="Title4",e.title5="Title5",e.default="Default",e.defaultBold="DefaultBold",e.defaultSemibold="DefaultSemibold",e.small="Small",e.smallBold="SmallBold",e.smallSemibold="SmallSemibold",e.custom="Custom"}(o||(t.DocsBlockTextPropertyStyle=o={}))},4068:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocsEntityGroupBehavior=o={}))},1233:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsEntityType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocsEntityType=o={}))},7971:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocsSectionType=void 0,function(e){e.plain="Plain",e.tabs="Tabs"}(o||(t.DocsSectionType=o={}))},5102:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyCalloutType=void 0,function(e){e.info="Info",e.success="Success",e.warning="Warning",e.error="Error"}(o||(t.DocumentationLegacyCalloutType=o={}))},2123:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyGroupBehavior=void 0,function(e){e.group="Group",e.tabs="Tabs"}(o||(t.DocumentationLegacyGroupBehavior=o={}))},9896:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyHeadingType=void 0,function(e){e[e.h1=1]="h1",e[e.h2=2]="h2",e[e.h3=3]="h3"}(o||(t.DocumentationLegacyHeadingType=o={}))},7379:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyItemType=void 0,function(e){e.group="Group",e.page="Page"}(o||(t.DocumentationLegacyItemType=o={}))},1423:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageAssetType=void 0,function(e){e.image="image",e.figmaFrame="figmaFrame"}(o||(t.DocumentationLegacyPageAssetType=o={}))},1601:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockThemeType=void 0,function(e){e.override="Override",e.comparison="Comparison"}(o||(t.DocumentationLegacyPageBlockThemeType=o={}))},1846:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DocumentationLegacyPageBlockType=void 0,function(e){e.text="Text",e.heading="Heading",e.code="Code",e.unorderedList="UnorderedList",e.orderedList="OrderedList",e.quote="Quote",e.callout="Callout",e.divider="Divider",e.image="Image",e.token="Token",e.tokenList="TokenList",e.tokenGroup="TokenGroup",e.shortcuts="Shortcuts",e.link="Link",e.figmaEmbed="FigmaEmbed",e.youtubeEmbed="YoutubeEmbed",e.storybookEmbed="StorybookEmbed",e.genericEmbed="Embed",e.figmaFrames="FigmaFrames",e.custom="Custom",e.renderCode="RenderCode",e.componentAssets="ComponentAssets",e.column="Column",e.columnItem="ColumnItem",e.tabs="Tabs",e.tabItem="TabItem",e.table="Table",e.tableCell="TableCell",e.tableRow="TableRow"}(o||(t.DocumentationLegacyPageBlockType=o={}))},1255:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameAlignment=void 0,function(e){e.frameHeight="FrameHeight",e.center="Center"}(o||(t.FrameAlignment=o={}))},3718:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.FrameLayout=void 0,function(e){e.c8="C8",e.c7="C7",e.c6="C6",e.c5="C5",e.c4="C4",e.c3="C3",e.c2="C2",e.c1="C1",e.c175="C1_75"}(o||(t.FrameLayout=o={}))},1:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.GradientType=void 0,function(e){e.linear="Linear",e.radial="Radial",e.angular="Angular"}(o||(t.GradientType=o={}))},934:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.IconSet=void 0,function(e){e.checkCircle="CheckCircle",e.crossCircle="CrossCircle",e.alert="Alert"}(o||(t.IconSet=o={}))},2674:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.RichTextSpanAttributeType=void 0,function(e){e.bold="Bold",e.italic="Italic",e.link="Link",e.strikethrough="Strikethrough",e.code="Code"}(o||(t.RichTextSpanAttributeType=o={}))},9125:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.ShadowType=void 0,function(e){e.drop="Drop",e.inner="Inner"}(o||(t.ShadowType=o={}))},4652:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.SourceType=void 0,function(e){e.figma="Figma",e.tokenStudio="TokenStudio",e.figmaVariablesPlugin="FigmaVariablesPlugin"}(o||(t.SourceType=o={}))},922:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextCase=void 0,function(e){e.original="Original",e.upper="Upper",e.lower="Lower",e.camel="Camel",e.smallCaps="SmallCaps"}(o||(t.TextCase=o={}))},7040:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoration=void 0,function(e){e.original="None",e.underline="Underline",e.strikethrough="Strikethrough"}(o||(t.TextDecoration=o={}))},3788:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.DT_TOKEN_TYPES=t.tokenTypeIsReferencable=t.REFERENCABLE_TOKEN_TYPES=t.REPLACABLE_TOKEN_TYPES=t.tokenTypeIsNonPure=t.tokenTypeIsPure=t.PURE_TOKEN_TYPES=t.ALL_TOKEN_TYPES=t.MS_DIMENSION_TOKEN_TYPES=t.RAW_DIMENSION_TOKEN_TYPES=t.DIMENSION_TOKEN_TYPES=t.OPTION_TOKEN_TYPES=t.STRING_TOKEN_TYPES=t.TokenType=void 0,function(e){e.color="Color",e.typography="Typography",e.shadow="Shadow",e.border="Border",e.gradient="Gradient",e.blur="Blur",e.radius="BorderRadius",e.borderWidth="BorderWidth",e.duration="Duration",e.fontSize="FontSize",e.dimension="Dimension",e.letterSpacing="LetterSpacing",e.lineHeight="LineHeight",e.opacity="Opacity",e.paragraphSpacing="ParagraphSpacing",e.size="Size",e.space="Space",e.zIndex="ZIndex",e.textDecoration="TextDecoration",e.textCase="TextCase",e.visibility="Visibility",e.fontFamily="FontFamily",e.fontWeight="FontWeight",e.string="String",e.productCopy="ProductCopy"}(o||(t.TokenType=o={})),t.STRING_TOKEN_TYPES=[o.string,o.productCopy,o.fontFamily,o.fontWeight],t.OPTION_TOKEN_TYPES=[o.textCase,o.textDecoration,o.visibility],t.DIMENSION_TOKEN_TYPES=[o.dimension,o.size,o.space,o.opacity,o.fontSize,o.lineHeight,o.letterSpacing,o.paragraphSpacing,o.borderWidth,o.radius,o.duration,o.zIndex],t.RAW_DIMENSION_TOKEN_TYPES=[o.opacity,o.zIndex],t.MS_DIMENSION_TOKEN_TYPES=[o.duration],t.ALL_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES,o.color,o.gradient,o.border,o.radius,o.shadow,o.typography,o.blur],t.PURE_TOKEN_TYPES=[...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.tokenTypeIsPure=e=>t.PURE_TOKEN_TYPES.includes(e),t.tokenTypeIsNonPure=e=>!(0,t.tokenTypeIsPure)(e),t.REPLACABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,...t.STRING_TOKEN_TYPES,...t.OPTION_TOKEN_TYPES],t.REFERENCABLE_TOKEN_TYPES=[o.color,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.textCase,o.textDecoration],t.tokenTypeIsReferencable=e=>t.REFERENCABLE_TOKEN_TYPES.includes(e),t.DT_TOKEN_TYPES=[o.color,o.shadow,o.gradient,o.typography,o.border,...t.DIMENSION_TOKEN_TYPES,o.fontFamily,o.fontWeight,o.string,...t.OPTION_TOKEN_TYPES]},8607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.MS_UNITS=t.PX_UNITS=t.RAW_UNITS=t.LINE_HEIGHT_UNITS=t.SIZE_UNITS=t.Unit=void 0,function(e){e.pixels="Pixels",e.percent="Percent",e.rem="Rem",e.ms="Ms",e.raw="Raw"}(o||(t.Unit=o={})),t.SIZE_UNITS=[o.pixels,o.percent,o.rem],t.LINE_HEIGHT_UNITS=[o.pixels,o.percent,o.rem,o.raw],t.RAW_UNITS=[o.raw],t.PX_UNITS=[o.pixels],t.MS_UNITS=[o.ms]},9478:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convertRemoteToUserRole=t.UserRole=void 0;const r=o(4379);var n;!function(e){e.owner="Owner",e.admin="Admin",e.creator="Creator",e.contributor="Contributor",e.billing="Billing",e.viewer="Viewer"}(n||(t.UserRole=n={})),t.convertRemoteToUserRole=e=>{switch(e){case"Owner":return n.owner;case"Admin":return n.admin;case"Creator":return n.creator;case"Contributor":return n.contributor;case"Billing":return n.billing;case"Viewer":return n.viewer;default:throw r.SupernovaError.fromMessage(`Unknown role: ${e}`)}}},6141:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.VisibilityType=void 0,function(e){e.visible="Visible",e.hidden="Hidden"}(o||(t.VisibilityType=o={}))},6298:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryAuthType=void 0,function(e){e.basic="Basic",e.bearer="Bearer"}(o||(t.WorkspaceNPMRegistryAuthType=o={}))},7968:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceNPMRegistryType=void 0,function(e){e.npmJS="NPMJS",e.gitHub="GitHub",e.azureDevOps="AzureDevOps",e.artifactory="Artifactory",e.custom="Custom"}(o||(t.WorkspaceNPMRegistryType=o={}))},5503:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionPlanInterval=void 0,function(e){e.yearly="yearly",e.monthly="monthly"}(o||(t.WorkspaceSubscriptionPlanInterval=o={}))},4290:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionProductCode=void 0,function(e){e.free="free",e.team="team",e.teamTest="team_test",e.company="company",e.enterprise="enterprise"}(o||(t.WorkspaceSubscriptionProductCode=o={}))},3607:(e,t)=>{var o;Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceSubscriptionStatus=void 0,function(e){e.active="active",e.gracePeriod="gracePeriod",e.cancelled="cancelled",e.suspended="suspended"}(o||(t.WorkspaceSubscriptionStatus=o={}))},2802:(e,t)=>{var o,r;Object.defineProperty(t,"__esModule",{value:!0}),t.PulsarExecutor=t.OutputFileType=void 0,function(e){e.copyRemoteUrl="copyRemoteUrl",e.text="text",e.binary="binary"}(o||(t.OutputFileType=o={})),function(e){e.supernova="supernova",e.local="local"}(r||(t.PulsarExecutor=r={}))}},o={};function r(t){var n=o[t];if(void 0!==n)return n.exports;var i=o[t]={exports:{}};return e[t](i,i.exports,r),i.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.TokenType=e.TextDecoration=e.TextCase=e.ShadowType=e.RichTextSpanAttributeType=e.GradientType=e.FrameLayout=e.FrameAlignment=e.IconSet=e.SourceType=e.DocsImageRefType=e.DocsLinkRefType=e.DocsSectionType=e.DocsEntityType=e.DocsEntityGroupBehavior=e.DocsBlockTextPropertyStyle=e.DocsBlockRichTextPropertyStyle=e.DocsBlockOptionColor=e.DocsBlockOptionRenderingStyle=e.DocsBlockItemVariantLayoutWidth=e.DocsBlockItemVariantLayoutType=e.DocsBlockItemPropertyType=e.DocsBlockItemPropertyTextStyle=e.DocsBlockItemPropertyRichTextStyle=e.DocsBlockItemPropertyOptionRenderingStyle=e.DocsBlockItemEntityType=e.DocsBlockImagePropertyAspectRatio=e.DocsBlockBehaviorSelectionType=e.DocsBlockBehaviorDataType=e.DocumentationLegacyPageBlockShortcutType=e.DocumentationLegacyPageBlockThemeType=e.DocumentationLegacyPageBlockType=e.DocumentationLegacyPageAssetType=e.DocumentationLegacyItemType=e.DocumentationLegacyHeadingType=e.DocumentationLegacyGroupBehavior=e.DocumentationLegacyCalloutType=e.BorderStyle=e.BorderPosition=e.BlurType=e.AssetScaleType=e.AssetScale=e.AssetFormat=e.Alignment=e.ALL_TOKEN_TYPES=e.ALL_BORDER_STYLES=e.ALL_BORDER_POSITIONS=e.OPTION_TOKEN_TYPES=e.STRING_TOKEN_TYPES=e.DIMENSION_TOKEN_TYPES=void 0,e.PulsarExecutor=e.OutputFileType=e.CustomDomainState=e.CustomDomainErrorCode=e.ImportWarningType=e.WorkspaceNPMRegistryType=e.WorkspaceNPMRegistryAuthType=e.WorkspaceSubscriptionStatus=e.WorkspaceSubscriptionProductCode=e.WorkspaceSubscriptionPlanInterval=e.VisibilityType=e.UserRole=e.Unit=void 0;var t=r(3788);Object.defineProperty(e,"DIMENSION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.DIMENSION_TOKEN_TYPES}}),Object.defineProperty(e,"STRING_TOKEN_TYPES",{enumerable:!0,get:function(){return t.STRING_TOKEN_TYPES}}),Object.defineProperty(e,"OPTION_TOKEN_TYPES",{enumerable:!0,get:function(){return t.OPTION_TOKEN_TYPES}});var o=r(1160);Object.defineProperty(e,"ALL_BORDER_POSITIONS",{enumerable:!0,get:function(){return o.ALL_BORDER_POSITIONS}});var i=r(4546);Object.defineProperty(e,"ALL_BORDER_STYLES",{enumerable:!0,get:function(){return i.ALL_BORDER_STYLES}});var a=r(3788);Object.defineProperty(e,"ALL_TOKEN_TYPES",{enumerable:!0,get:function(){return a.ALL_TOKEN_TYPES}});var l=r(7476);Object.defineProperty(e,"Alignment",{enumerable:!0,get:function(){return l.Alignment}});var s=r(8738);Object.defineProperty(e,"AssetFormat",{enumerable:!0,get:function(){return s.AssetFormat}});var c=r(915);Object.defineProperty(e,"AssetScale",{enumerable:!0,get:function(){return c.AssetScale}});var u=r(899);Object.defineProperty(e,"AssetScaleType",{enumerable:!0,get:function(){return u.AssetScaleType}});var p=r(6192);Object.defineProperty(e,"BlurType",{enumerable:!0,get:function(){return p.BlurType}});var d=r(1160);Object.defineProperty(e,"BorderPosition",{enumerable:!0,get:function(){return d.BorderPosition}});var m=r(4546);Object.defineProperty(e,"BorderStyle",{enumerable:!0,get:function(){return m.BorderStyle}});var y=r(5102);Object.defineProperty(e,"DocumentationLegacyCalloutType",{enumerable:!0,get:function(){return y.DocumentationLegacyCalloutType}});var T=r(2123);Object.defineProperty(e,"DocumentationLegacyGroupBehavior",{enumerable:!0,get:function(){return T.DocumentationLegacyGroupBehavior}});var f=r(9896);Object.defineProperty(e,"DocumentationLegacyHeadingType",{enumerable:!0,get:function(){return f.DocumentationLegacyHeadingType}});var g=r(7379);Object.defineProperty(e,"DocumentationLegacyItemType",{enumerable:!0,get:function(){return g.DocumentationLegacyItemType}});var S=r(1423);Object.defineProperty(e,"DocumentationLegacyPageAssetType",{enumerable:!0,get:function(){return S.DocumentationLegacyPageAssetType}});var b=r(1846);Object.defineProperty(e,"DocumentationLegacyPageBlockType",{enumerable:!0,get:function(){return b.DocumentationLegacyPageBlockType}});var h=r(1601);Object.defineProperty(e,"DocumentationLegacyPageBlockThemeType",{enumerable:!0,get:function(){return h.DocumentationLegacyPageBlockThemeType}});var v=r(2657);Object.defineProperty(e,"DocumentationLegacyPageBlockShortcutType",{enumerable:!0,get:function(){return v.DocumentationLegacyPageBlockShortcutType}});var P=r(5651);Object.defineProperty(e,"DocsBlockBehaviorDataType",{enumerable:!0,get:function(){return P.DocsBlockBehaviorDataType}});var k=r(3733);Object.defineProperty(e,"DocsBlockBehaviorSelectionType",{enumerable:!0,get:function(){return k.DocsBlockBehaviorSelectionType}});var O=r(8890);Object.defineProperty(e,"DocsBlockImagePropertyAspectRatio",{enumerable:!0,get:function(){return O.DocsBlockImagePropertyAspectRatio}});var _=r(9377);Object.defineProperty(e,"DocsBlockItemEntityType",{enumerable:!0,get:function(){return _.DocsBlockItemEntityType}});var C=r(5883);Object.defineProperty(e,"DocsBlockItemPropertyOptionRenderingStyle",{enumerable:!0,get:function(){return C.DocsBlockItemPropertyOptionRenderingStyle}});var I=r(8061);Object.defineProperty(e,"DocsBlockItemPropertyRichTextStyle",{enumerable:!0,get:function(){return I.DocsBlockItemPropertyRichTextStyle}});var D=r(7479);Object.defineProperty(e,"DocsBlockItemPropertyTextStyle",{enumerable:!0,get:function(){return D.DocsBlockItemPropertyTextStyle}});var N=r(6839);Object.defineProperty(e,"DocsBlockItemPropertyType",{enumerable:!0,get:function(){return N.DocsBlockItemPropertyType}});var E=r(8095);Object.defineProperty(e,"DocsBlockItemVariantLayoutType",{enumerable:!0,get:function(){return E.DocsBlockItemVariantLayoutType}});var x=r(7291);Object.defineProperty(e,"DocsBlockItemVariantLayoutWidth",{enumerable:!0,get:function(){return x.DocsBlockItemVariantLayoutWidth}});var j=r(5963);Object.defineProperty(e,"DocsBlockOptionRenderingStyle",{enumerable:!0,get:function(){return j.DocsBlockOptionRenderingStyle}});var B=r(9133);Object.defineProperty(e,"DocsBlockOptionColor",{enumerable:!0,get:function(){return B.DocsBlockOptionColor}});var R=r(6644);Object.defineProperty(e,"DocsBlockRichTextPropertyStyle",{enumerable:!0,get:function(){return R.DocsBlockRichTextPropertyStyle}});var L=r(306);Object.defineProperty(e,"DocsBlockTextPropertyStyle",{enumerable:!0,get:function(){return L.DocsBlockTextPropertyStyle}});var M=r(4068);Object.defineProperty(e,"DocsEntityGroupBehavior",{enumerable:!0,get:function(){return M.DocsEntityGroupBehavior}});var F=r(1233);Object.defineProperty(e,"DocsEntityType",{enumerable:!0,get:function(){return F.DocsEntityType}});var A=r(7971);Object.defineProperty(e,"DocsSectionType",{enumerable:!0,get:function(){return A.DocsSectionType}});var w=r(5673);Object.defineProperty(e,"DocsLinkRefType",{enumerable:!0,get:function(){return w.DocsLinkRefType}});var H=r(9932);Object.defineProperty(e,"DocsImageRefType",{enumerable:!0,get:function(){return H.DocsImageRefType}});var U=r(4652);Object.defineProperty(e,"SourceType",{enumerable:!0,get:function(){return U.SourceType}});var W=r(934);Object.defineProperty(e,"IconSet",{enumerable:!0,get:function(){return W.IconSet}});var V=r(1255);Object.defineProperty(e,"FrameAlignment",{enumerable:!0,get:function(){return V.FrameAlignment}});var $=r(3718);Object.defineProperty(e,"FrameLayout",{enumerable:!0,get:function(){return $.FrameLayout}});var G=r(1);Object.defineProperty(e,"GradientType",{enumerable:!0,get:function(){return G.GradientType}});var Y=r(2674);Object.defineProperty(e,"RichTextSpanAttributeType",{enumerable:!0,get:function(){return Y.RichTextSpanAttributeType}});var K=r(9125);Object.defineProperty(e,"ShadowType",{enumerable:!0,get:function(){return K.ShadowType}});var z=r(922);Object.defineProperty(e,"TextCase",{enumerable:!0,get:function(){return z.TextCase}});var q=r(7040);Object.defineProperty(e,"TextDecoration",{enumerable:!0,get:function(){return q.TextDecoration}});var J=r(3788);Object.defineProperty(e,"TokenType",{enumerable:!0,get:function(){return J.TokenType}});var Z=r(8607);Object.defineProperty(e,"Unit",{enumerable:!0,get:function(){return Z.Unit}});var X=r(9478);Object.defineProperty(e,"UserRole",{enumerable:!0,get:function(){return X.UserRole}});var Q=r(6141);Object.defineProperty(e,"VisibilityType",{enumerable:!0,get:function(){return Q.VisibilityType}});var ee=r(5503);Object.defineProperty(e,"WorkspaceSubscriptionPlanInterval",{enumerable:!0,get:function(){return ee.WorkspaceSubscriptionPlanInterval}});var te=r(4290);Object.defineProperty(e,"WorkspaceSubscriptionProductCode",{enumerable:!0,get:function(){return te.WorkspaceSubscriptionProductCode}});var oe=r(3607);Object.defineProperty(e,"WorkspaceSubscriptionStatus",{enumerable:!0,get:function(){return oe.WorkspaceSubscriptionStatus}});var re=r(6298);Object.defineProperty(e,"WorkspaceNPMRegistryAuthType",{enumerable:!0,get:function(){return re.WorkspaceNPMRegistryAuthType}});var ne=r(7968);Object.defineProperty(e,"WorkspaceNPMRegistryType",{enumerable:!0,get:function(){return ne.WorkspaceNPMRegistryType}});var ie=r(8042);Object.defineProperty(e,"ImportWarningType",{enumerable:!0,get:function(){return ie.ImportWarningType}});var ae=r(5695);Object.defineProperty(e,"CustomDomainErrorCode",{enumerable:!0,get:function(){return ae.CustomDomainErrorCode}});var le=r(7737);Object.defineProperty(e,"CustomDomainState",{enumerable:!0,get:function(){return le.CustomDomainState}});var se=r(2802);Object.defineProperty(e,"OutputFileType",{enumerable:!0,get:function(){return se.OutputFileType}}),Object.defineProperty(e,"PulsarExecutor",{enumerable:!0,get:function(){return se.PulsarExecutor}})})();var i=t;for(var a in n)i[a]=n[a];n.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})()},"../../utils/node_modules/change-case/dist/index.js":
/*!**********************************************************!*\
  !*** ../../utils/node_modules/change-case/dist/index.js ***!
  \**********************************************************/(e,t,o)=>{"use strict";o.r(t),o.d(t,{camelCase:()=>d,capitalCase:()=>T,constantCase:()=>f,dotCase:()=>g,kebabCase:()=>S,noCase:()=>p,pascalCase:()=>m,pascalSnakeCase:()=>y,pathCase:()=>b,sentenceCase:()=>h,snakeCase:()=>v,split:()=>c,splitSeparateNumbers:()=>u,trainCase:()=>P});const r=/([\p{Ll}\d])(\p{Lu})/gu,n=/(\p{Lu})([\p{Lu}][\p{Ll}])/gu,i=/(\d)\p{Ll}|(\p{L})\d/u,a=/[^\p{L}\d]+/giu,l="$1\0$2",s="";function c(e){let t=e.trim();t=t.replace(r,l).replace(n,l),t=t.replace(a,"\0");let o=0,i=t.length;for(;"\0"===t.charAt(o);)o++;if(o===i)return[];for(;"\0"===t.charAt(i-1);)i--;return t.slice(o,i).split(/\0/g)}function u(e){const t=c(e);for(let e=0;e<t.length;e++){const o=t[e],r=i.exec(o);if(r){const n=r.index+(r[1]??r[2]).length;t.splice(e,1,o.slice(0,n),o.slice(n))}}return t}function p(e,t){const[o,r,n]=I(e,t);return o+r.map(k(t?.locale)).join(t?.delimiter??" ")+n}function d(e,t){const[o,r,n]=I(e,t),i=k(t?.locale),a=O(t?.locale),l=t?.mergeAmbiguousCharacters?_(i,a):C(i,a);return o+r.map(((e,t)=>0===t?i(e):l(e,t))).join(t?.delimiter??"")+n}function m(e,t){const[o,r,n]=I(e,t),i=k(t?.locale),a=O(t?.locale),l=t?.mergeAmbiguousCharacters?_(i,a):C(i,a);return o+r.map(l).join(t?.delimiter??"")+n}function y(e,t){return T(e,{delimiter:"_",...t})}function T(e,t){const[o,r,n]=I(e,t),i=k(t?.locale),a=O(t?.locale);return o+r.map(_(i,a)).join(t?.delimiter??" ")+n}function f(e,t){const[o,r,n]=I(e,t);return o+r.map(O(t?.locale)).join(t?.delimiter??"_")+n}function g(e,t){return p(e,{delimiter:".",...t})}function S(e,t){return p(e,{delimiter:"-",...t})}function b(e,t){return p(e,{delimiter:"/",...t})}function h(e,t){const[o,r,n]=I(e,t),i=k(t?.locale),a=O(t?.locale),l=_(i,a);return o+r.map(((e,t)=>0===t?l(e):i(e))).join(t?.delimiter??" ")+n}function v(e,t){return p(e,{delimiter:"_",...t})}function P(e,t){return T(e,{delimiter:"-",...t})}function k(e){return!1===e?e=>e.toLowerCase():t=>t.toLocaleLowerCase(e)}function O(e){return!1===e?e=>e.toUpperCase():t=>t.toLocaleUpperCase(e)}function _(e,t){return o=>`${t(o[0])}${e(o.slice(1))}`}function C(e,t){return(o,r)=>{const n=o[0];return(r>0&&n>="0"&&n<="9"?"_"+n:t(n))+e(o.slice(1))}}function I(e,t={}){const o=t.split??(t.separateNumbers?u:c),r=t.prefixCharacters??s,n=t.suffixCharacters??s;let i=0,a=e.length;for(;i<e.length;){const t=e.charAt(i);if(!r.includes(t))break;i++}for(;a>i;){const t=a-1,o=e.charAt(t);if(!n.includes(o))break;a=t}return[e.slice(0,i),o(e.slice(i,a)),e.slice(a)]}}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,o),i.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};o("./src/index.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,